<style lang="scss">
@import './vant/common/index.wxss';
.container {
  height: 100%;
  color: #58422b;
}
button::after {
  border: none;
}
.container-scroll {
  position: relative;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import 'weapp-cookie'
import { setStore } from 'wepy-redux'
import configStore from './store'
// eslint-disable-next-line no-unused-vars
import api from './request/api'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/card',
      'pages/catalog',
      'pages/classroom',
      'pages/ready',
      'pages/study',
      'pages/test',
      'pages/user',
      'pages/praiseOfWorks',
      'pages/myWork',
      'pages/myWorkAll',
      'pages/completionOfWork',
      'pages/submitHomework',
      'pages/uploadHomework',
      'pages/shareHomework',
      'pages/pointNotice',
      'pages/recognitionNotice',
      'pages/address',
      'pages/subscribe',
      'pages/authorize'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black',
      navigationStyle: 'custom'
    }
  }

  globalData = {
    api: api,
    userInfo: null,
    systemInfo: null,
    headHeight: 46,
    audioContext: wx.createInnerAudioContext(),
    show(that, param, opacity) {
      var animation = wx.createAnimation({
      // 持续时间800ms
        duration: 500,
        timingFunction: 'ease'
      })
    // var animation = this.animation
      animation.opacity(opacity).step()
    // 设置动画
      that[param] = animation.export()
    }
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch (options) {
    const that = this
    wepy.login().then(res => {
      let params = {
        code: res.code
      }

      api.user.wxUserLogin(params).then(({ data }) => {
        let { resultData } = data
        this.globalData.userInfo = resultData
        store.dispatch({ type: 'UPDATE_USERINFO', payload: resultData })
        if (resultData.needAuth) {
          let url = `/pages/authorize`
          wx.redirectTo({ url })
        }
      })
    })
    wx.getSystemInfo({
      success (res) {
        that.globalData.systemInfo = res
        that.globalData.headHeight = res.statusBarHeight + 46
      }
    })
  }
}
</script>
