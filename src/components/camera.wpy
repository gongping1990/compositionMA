<template>
  <view class="container camera" wx:if="{{isShow}}">
    <camera class="camera" device-position="back" flash="off" binderror="error">
      <cover-image
        class="camera-img"
        src="{{cameraImg}}"
        wx:if="{{cameraImg}}"
      />
      <cover-view class="camera-cover">
        <cover-image
          class="camera-cover-icon"
          src="https://pub.file.k12.vip/2019/12/06/1202780137163984897.png"
          wx:if="{{showIcon}}"
          @tap="closeIcon"
        />
        <cover-view class="camera-cover-control">
          <button
            class="camera-cover-cancel"
            wx:if="{{cameraImg}}"
            @tap="bindClickCancel"
          >
            重拍
          </button>
          <button class="camera-cover-cancel" wx:else @tap="bindClickCancel">
            取消
          </button>
          <cover-view
            class="camera-cover-confirm"
            wx:if="{{!cameraImg}}"
            @tap="takePhoto"
          ></cover-view>
          <button
            class="camera-cover-tj"
            wx:if="{{cameraImg}}"
            @tap="bindClickSubmit"
          >
            提交
          </button>
          <button class="camera-cover-tj" wx:else @tap="bindClickSubmit">
            相册
          </button>
        </cover-view>
      </cover-view>
    </camera>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import api from '../request/api'

  export default class CameraImg extends wepy.component {
    config = {
      navigationBarTitleText: '拍照',
      usingComponents: {
        'van-popup': '../vant/popup/index'
      }
    }

    props = {
      isShow: {
        type: Boolean,
        default: false
      }
    };

    data = {
      showIcon: true,
      cameraImg: ''
    }
    methods = {

      closeIcon() {
        this.showIcon = false
      },
      bindClickCancel() {
        if (!this.cameraImg) {
          // wx.navigateBack({
          //   delta: 1
          // })
          this.$emit('closeCamera');
        } else {
          this.cameraImg = ''
        }
      },
      bindClickSubmit() {
        let _self = this
        if (!_self.cameraImg) {
          wx.chooseImage({
            count: 1,
            sizeType: ['original', 'compressed'],
            sourceType: ['album'],
            success(res) {
              _self.$emit('successImg', res.tempFilePaths)
              _self.$emit('closeCamera');
            }
          })
        } else {
          _self.$emit('successImg', [_self.cameraImg])
          _self.$emit('closeCamera');
        }
      },
      takePhoto() {
        const ctx = wx.createCameraContext()
        ctx.takePhoto({
          quality: 'high',
          success: res => {
            this.cameraImg = res.tempImagePath
            this.$apply()
          }
        })
      },
      error(e) {
      }
    }
    events = {}
    watch = {
      isShow: (_n)=> {
        _n && this.hideIcon()
        !_n && this.openIcon()
      }
    }
    hideIcon() {
      setTimeout(() => {
        this.showIcon = false
        this.$apply()
      }, 3000);
    }
    openIcon () {
      this.showIcon = true
      this.cameraImg = ''
    }
    onLoad() {}
  }
</script>
<style lang="scss">
  @import '../assets/style/mixin.scss';
  .camera {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100vh;
    background: #fff;

    &-img {
      position: fixed;
      left: 0;
      top: 0;
      width: 100%;
      z-index: 1;
    }
    &-cover {
      display: flex;
      /*flex-direction: column;*/
      align-items: flex-end;
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
      height: 350px;
      z-index: 9;

      &-icon {
        position: absolute;
        left: 16%;
        top: 0;
        margin: 0 auto;
        width: 516px;
        height: 154px;
        z-index: 100;

      }

      &-control {
        position: relative;
        display: flex;
        align-items: center;
        background-color: #333333;
        width: 100%;
        height: 224px;
        line-height: 224px;
      }
      &-tj,
      &-cancel,
      &-confirm {
        position: absolute;
      }
      &-tj,
      &-cancel {
        /*bottom: 10px;*/
        display: flex;
        align-items: center;
        left: 84px;
        /*width: 100px;*/
        /*height: 110px;*/
        font-size: 32px;
        color: #fff;
        background-color: transparent;
      }
      &-tj {
        left: auto;
        right: 84px;
        justify-content: flex-end;
      }
      &-confirm {
        box-sizing: initial;
        top: 50rpx;
        left: 50%;
        width: 88px;
        height: 88px;
        background: rgba(255, 255, 255, 1);
        border: 22px solid #d8d8d8;
        border-radius: 50%;
        transform: translateX(-50%);
      }
    }
  }
</style>
