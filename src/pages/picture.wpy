<template>
  <view class="container picture">
    <mHeader
      title=""
      bgColor="transparent"
      :showBtn.sync="showBtn"
      flag="3"
    ></mHeader>
    <swiper
      class="picture-swiper"
      current="{{current}}"
      bindchange="bindchange"
    >
      <block wx:for="{{learnData.ibookList}}" wx:key="{{item.id}}">
        <swiper-item>
          <view class="picture-item">
            <image
              class="picture-item-img"
              mode="widthFix"
              src="{{item.imgUrl}}"
            />
            <!-- <view class="picture-item-text">
              又走到了那条布满小石子的路上去了......哇哦，那边危险！！不过小猪还是义无反顾地往那边走去了。
              不停有小石子从上面掉下来
            </view> -->
          </view>
        </swiper-item>
      </block>
    </swiper>

    <view class="picture-num">
      {{ current + 1 + '/' + pageTimes.length }}
    </view>
    <view class="_c-dialog" wx:if="{{showDialog}}">
      <view class="_c-dialog-content">
        <view class="_c-dialog-icon"></view>
        <view class="_c-dialog-text">
          你上次已经学习到第{{ pointData.cpage + 1 }}页是否要继续？
        </view>
        <view class="_c-dialog-footer">
          <view class="_c-dialog-btn cancle" @tap="cancle">从头开始</view>
          <view class="_c-dialog-btn confirm" @tap="confirm">继续学习</view>
        </view>
      </view>
    </view>

    <view class="_c-dialog" wx:if="{{showBack}}">
      <view class="_c-dialog-content">
        <view class="_c-dialog-icon"></view>
        <view class="_c-dialog-text">
          确定要退出上课吗？
        </view>
        <view class="_c-dialog-footer">
          <view class="_c-dialog-btn cancle" @tap="cancleBack">确认退出</view>
          <view class="_c-dialog-btn confirm" @tap="confirmBack">继续学习</view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import mHeader from '../components/header'
let InnerAudioContext = null
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: ''
  }
  data = {
    showDialog: false,
    showBack: false,
    current: 0,
    pageNum: 0,
    pageTimes: [],
    learnData: {},
    pointData: {}
  }
  components = {
    mHeader
  }
  methods = {
    bindchange(params) {
      let { current, source } = params.detail
      let { pageTimes } = this
      this.current = current
      if (source == 'touch') {
        InnerAudioContext.seek(+pageTimes[current])
      }
    },
    cancleBack() {
      wx.navigateBack()
    },
    cancle() {
      this.resetPoint()
    },
    confirmBack() {
      this.showBack = false
    },
    confirm() {
      this.showDialog = false
      this.current = this.pointData.cpage
      this.initPage()
    }
  }
  events = {
    back() {
      wx.navigateBack()
    }
  }
  watch = {
    current(n) {
      this.updatePoint()
    }
  }
  computed = {}

  initPage() {
    let { pageTimes } = this
    let { ibookList, authContentUrl } = this.learnData
    InnerAudioContext.onEnded(() => {
      wx.redirectTo({
        url: `/pages/result?id=${this.pointId}&cid=${this.pointData.id}`
      })
    })
    InnerAudioContext.onPlay(() => {})

    InnerAudioContext.onTimeUpdate(() => {
      let time = parseInt(InnerAudioContext.currentTime)
      let activePage = ibookList[time]
      if (activePage) {
        this.current = activePage.index - 1
        this.activePage = activePage
      }
      this.$apply()
    })
    InnerAudioContext.src = authContentUrl
    if (this.current) {
      InnerAudioContext.seek(+pageTimes[this.current])
    }
    InnerAudioContext.play()
  }

  getThreeLearnInfo() {
    let { api } = this.$parent.globalData
    api.study
      .getThreeLearnInfo({
        pointId: this.pointId
      })
      .then(({ data }) => {
        this.learnData = data.resultData
        this.pageTimes = Object.keys(this.learnData.ibookList)
        this.startPoint()
        this.$apply()
      })
  }
  startPoint() {
    let { api } = this.$parent.globalData
    api.study
      .startPoint({
        cpId: this.learnData.id,
        lessonId: this.learnData.lessonId
      })
      .then(({ data }) => {
        let { type } = this.learnData
        this.pointData = data.resultData
        if (data.resultData.resume) {
          this.showDialog = true
        } else {
          setTimeout(() => {
            this.initPage()
          }, 1000)
        }
        this.$apply()
      })
  }
  resetPoint() {
    let { api } = this.$parent.globalData
    api.study
      .resetPoint({
        id: this.pointData.id
      })
      .then(({ data }) => {
        this.showDialog = false
        this.initPage()
        this.$apply()
      })
  }
  updatePoint() {
    let { api } = this.$parent.globalData
    api.study.updatePoint({
      cpage: this.current,
      id: this.pointData.id
    })
  }
  onLoad(option) {
    this.pointId = option.id
    InnerAudioContext = wx.createInnerAudioContext()
  }
  onShow() {
    this.getThreeLearnInfo()
  }
  onUnload() {
    InnerAudioContext.destroy()
  }
}
</script>
<style lang="scss">
@import '../assets/style/mixin.scss';
.picture {
  &-swiper {
    width: 100vw;
    height: 100vh;
  }
  &-num {
    @include flex-center;
    position: fixed;
    left: 50%;
    bottom: 12px;
    width: 176px;
    height: 52px;
    background: rgba(255, 180, 1, 1);
    box-shadow: 0px -4px 0px 0px rgba(255, 149, 0, 1);
    border-radius: 16px;
    transform: translateX(-50%);
    font-size: 26px;
    color: #fff;
    font-weight: 500;
  }
  &-item {
    position: relative;
    height: 100vh;
    &-img {
      width: 100vw;
    }
    &-text {
      box-sizing: border-box;
      position: absolute;
      left: 50%;
      bottom: 140px;
      padding: 48px;
      width: 638px;
      background: rgba(255, 255, 255, 0.95);
      border-radius: 64px;
      border: 8px solid rgba(255, 255, 255, 1);
      transform: translateX(-50%);
      font-size: 40px;
      color: #333;
    }
  }
}
</style>
