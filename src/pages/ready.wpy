<!--  -->
<template>
  <view class="container ready">
    <mHeader title="课前热身" flag="4"></mHeader>
    <view class="container-scroll" style="margin-top:{{height}}px">
      <view class="header">
        <view class="header-left">
          <image class="header-avatar" src="{{roomData.teacherImg}}" />
          <text class="header-title">{{ roomData.teacherName }}</text>
          <text class="header-subtitle">写作老师</text>
        </view>
        <view class="header-right {{isReady && 'isReady'}}">
          <view
            class="header-student {{readyArr[index] && 'isReady'}}"
            wx:for="{{mateInfo}}"
            wx:key="{{item.mateId}}"
          >
            <image class="header-student-avatar" src="{{item.mateImg}}" />
            <view class="header-status">{{
              readyArr[index] ? '已准备' : '准备中...'
            }}</view>
          </view>
        </view>
      </view>
      <view
        class="content"
        style="height:calc(100vh - 254rpx - {{height * 2}}rpx)"
      >
        <view class="chart-item">
          <image class="chart-avatar" src="{{roomData.teacherImg}}" />
          <view class="chart-right">
            <text class="chart-title">{{ roomData.teacherName }}</text>
            <view class="chart-content-wrap">
              <view class="chart-content voice" @tap="bindClickVoice">
                <view class="icon {{paused && 'paused'}}"></view>
              </view>
              <view class="chart-time">{{ timeText }}</view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <form report-submit="true" @submit="submit">
      <button
        form-type="submit"
        class="ready-btn {{isReady && 'show'}}"
        @tap="clickStudy"
      >
        {{ time ? '开始上课（' + time + '）s' : '开始上课' }}
      </button>
    </form>
    <loading wx:if="{{loading}}"></loading>
    <view class="loading-progress {{showDownTime && 'show'}}">
      <view class="loading-progress-img"></view>
      <view class="loading-progress-bar ">
        <view class="{{showDownTime && 'show'}}"></view>
      </view>
      <view class="loading-progress-text">loading…</view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { saveFormId } from '../utils'
import mHeader from '@/components/header'
import loading from '@/components/loading'
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: '',
    usingComponents: {
      'van-popup': '../vant/popup/index'
    }
  }
  data = {
    lessonId: 0,
    audioContext: null,
    readyArr: [0, 0, 0, 0],
    roomData: {},
    courseInfo: {},
    mateInfo: [],
    duration: 0,
    currentTime: 0,
    time: 3,
    loading: true,
    isReady: false,
    showContinueDiaolig: true,
    timeText: '00:00',
    showDownTime: false,
    paused: false
  }
  components = {
    mHeader,
    loading
  }
  methods = {
    submit(e) {
      saveFormId(e.detail.formId)
    },
    clickStudy() {
      let { audioContext, playSound } = this.$parent.globalData
      playSound(audioContext, 1)
      this.time = 0
    },
    bindClickVoice() {
      if (this.paused) {
        this.paused = false
        this.audioContext.seek(0)
        this.audioContext.play()
      } else {
        this.paused = true
        this.audioContext.pause()
      }
      this.$apply()
    }
  }
  events = {
    back() {
      wx.navigateBack({
        delta: 1 // 返回的页面数，如果 delta 大于现有页面数，则返回到首页,
      })
    }
  }
  watch = {}
  computed = {
    height() {
      return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight
    }
  }

  imitateReady() {
    let { readyArr } = this
    let random = parseInt(Math.random() * 3)
    this.readyArr[random] = 1
    if (!(readyArr[0] && readyArr[1] && readyArr[2])) {
      setTimeout(() => {
        this.imitateReady()
        this.$apply()
      }, 300)
    } else {
    }
  }

  downTime() {
    if (this.time >= 1) {
      this.time -= 1
      setTimeout(() => {
        this.downTime()
      }, 1000)
    } else {
      this.readyArr[3] = 1
      this.showDownTime = true
      this.downTimeEnd()
    }
    this.$apply()
  }

  downTimeEnd() {
    setTimeout(() => {
      this.showDownTime = false
      wx.redirectTo({ url: '/pages/study?id=' + this.lessonId })
    }, 4000)
  }

  initAudio(src) {
    let { audioContext } = this
    audioContext.obeyMuteSwitch = false
    audioContext.src = src
    setTimeout(() => {
      audioContext.play()
    }, 500)
  }

  formatTimeText() {
    let { currentTime, duration } = this
    let minute = 0
    let second = 0
    let time = duration - currentTime
    minute = parseInt(time / 60)
    second = time % 60
    minute = minute < 10 ? '0' + minute : minute
    second = second < 10 ? '0' + second : second
    this.timeText = `${minute}:${second}`
    this.$apply()
  }

  initPage() {
    this.joinRoom()
    this.getClassInfo()
  }

  joinRoom() {
    let { api } = this.$parent.globalData
    api.study
      .joinRoom({
        lessonId: this.lessonId
      })
      .then(({ data }) => {
        this.roomData = data.resultData
        this.mateInfo = data.resultData.mateInfo
        this.$apply()
      })
  }

  getClassInfo() {
    let { api } = this.$parent.globalData
    api.course
      .getClassInfo({
        lessonId: this.lessonId
      })
      .then(({ data }) => {
        this.courseInfo = data.resultData
        setTimeout(() => {
          this.loading = false
          this.initAudio(data.resultData.guideAudio)
          this.$apply()
        }, 1000)
        this.$apply()
      })
  }

  onLoad(option) {
    this.audioContext = wx.createInnerAudioContext()
    this.lessonId = option.id
    this.audioContext.onEnded(() => {
      this.isReady = true
      this.imitateReady()
      setTimeout(() => {
        this.downTime()
      }, 1500)
      this.$apply()
    })
    this.audioContext.onPlay(() => {})
    this.audioContext.onTimeUpdate(() => {
      if (!this.currentTime) {
        this.duration = parseInt(this.audioContext.duration)
      }
      if (this.currentTime !== this.audioContext.currentTime) {
        this.currentTime = parseInt(this.audioContext.currentTime)
      }
      this.formatTimeText()
      this.$apply()
    })
  }
  onShow() {
    this.initPage()
  }
  onHide() {
    this.$parent.globalData.audioContext.stop()
    this.audioContext.stop()
  }
  onUnload() {
    this.$parent.globalData.audioContext.stop()
    this.audioContext.stop()
    this.audioContext.destroy()
  }
  onShareAppMessage() {
    return {
      title: `每天8分钟，北师大老师教孩子积累素材、使用素材、运用技巧。`,
      path: `/pages/index`,
      imageUrl: 'https://pub.file.k12.vip/tbzw/v2/logo2.png'
    }
  }
}
</script>
<style lang="scss">
@import '../assets/style/mixin.scss';
.ready {
  position: relative;
  .chart {
    &-item {
      display: flex;
      align-items: flex-start;

      padding: 0 48px;
      margin-top: 48px;
    }
    &-avatar {
      margin-right: 16px;
      width: 64px;
      height: 64px;
      border-radius: 8px;
      border: 4px solid rgba(232, 197, 157, 1);
    }
    &-right {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
    }
    &-title {
      margin-bottom: 8px;
      font-size: 24px;
      color: rgba($color: #58422b, $alpha: 0.4);
    }
    &-time {
      width: 110px;
      margin-left: 24px;
      font-size: 28px;
      color: #58422b;
      font-weight: 500;
    }
    &-content-wrap {
      padding-left: 20px;
      display: flex;
      align-items: center;
    }
    &-content {
      position: relative;
      flex: 1;
      font-size: 28px;
      line-height: 40px;
      padding: 24px 32px;
      background: rgba(255, 245, 209, 1);
      border-radius: 16px;
      border: 3px solid rgba(232, 197, 157, 1);
      &::before {
        @include bg('/icon.png');
        content: '';
        position: absolute;
        left: -20px;
        top: 12px;
        width: 50px;
        height: 30px;
      }
      &.voice .icon {
        @include bg('/v2/audio-pay.gif');
        margin-left: 16px;
        width: 26px;
        height: 43px;
      }
      &.voice .paused {
        @include bg('/sk/icon-audio.png');
      }
    }
  }
  &-btn {
    @include flex-center;
    position: absolute;
    left: 50%;
    bottom: 48px;
    margin-left: -235px;
    width: 470px;
    height: 100px;
    color: #58422b;
    font-size: 32px;
    font-weight: 500;
    opacity: 0;
    background: linear-gradient(
      90deg,
      rgba(249, 230, 11, 1) 0%,
      rgba(253, 219, 85, 1) 100%
    );
    box-shadow: 0px 8px 16px 4px rgba(230, 194, 81, 0.4);
    border-radius: 54px;
    transform: translateY(200px);
    transition: all 0.5s;
    &.show {
      opacity: 1;
      bottom: 48px;
      transform: translateY(0);
    }
  }
  .header {
    @include flex-center;
    @include bg('/sk/backgroud1.png');
    justify-content: space-between;
    padding: 0 32px;
    height: 254px;
    &-left {
      @include flex-column-center;
    }
    &-right {
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-sizing: border-box;
      padding: 0 28px;
      width: 520px;
      height: 136px;
      border-radius: 48px;
      background: linear-gradient(white, white) padding-box,
        repeating-linear-gradient(
          45deg,
          transparent 0,
          transparent 25%,
          rgba(61, 53, 45, 0.1) 0,
          rgba(61, 53, 45, 0.1) 50%
        );
      background-size: 20px 20px;
      border: 4px dashed transparent;
      animation: antsAnime 10000s linear infinite;
      &.isReady {
        animation: none;
        background-image: none;
        border: 4px dashed rgba(61, 203, 255, 1);
      }
    }
    &-avatar {
      margin-bottom: 4px;
      width: 88px;
      height: 88px;
      box-shadow: 0px 0px 24px 0px rgba(175, 126, 0, 0.2);
      border-radius: 16px;
      border: 4px solid rgba(232, 197, 157, 1);
    }
    &-student {
      position: relative;
      border: 3px solid #000;
      border-radius: 16px;
      opacity: 0.3;
      &-avatar {
        width: 80px;
        height: 80px;
        box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);
        border-radius: 16px;
        border: 3px solid rgba(255, 255, 255, 1);
      }
      &.isReady {
        opacity: 1;
        border-color: #39dda9;
        .header-status {
          background: #39dda9;
        }
      }
    }
    &-status {
      @include flex-center;
      position: absolute;
      left: 50%;
      bottom: -12px;
      width: 108px;
      height: 40px;
      font-size: 20px;
      color: #fff;
      margin-left: -54px;
      background: #000000;
      border-radius: 32px;
      border: 4px solid rgba(255, 255, 255, 1);
    }
    &-title {
      font-size: 28px;
      line-height: 40px;
      color: #58422b;
    }
    &-subtitle {
      font-size: 20px;
      line-height: 28px;
      color: rgba($color: #58422b, $alpha: 0.5);
    }
  }
  .content {
    overflow-y: auto;
  }
  .loading-progress {
    @include flex-column-center;
    visibility: hidden;
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 3000;
    background: rgba($color: #000, $alpha: 0.7);
    &.show {
      visibility: visible;
    }
    &-img {
      width: 100%;
      height: 350px;
      background: url('https://pub.file.k12.vip/tbzw/1.5/classroom/loding.gif')
        no-repeat;
      background-size: 100%;
    }
    &-bar {
      position: relative;
      width: 582px;
      height: 38px;
      background: rgba(255, 245, 213, 1);
      border-radius: 19px;
      border: 4px solid rgba(255, 255, 255, 1);
      overflow: hidden;
      view {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 0;
        background: #ffc000;
        border-radius: 19px;
        transition: all 3s ease-out;
        &.show {
          width: 100%;
        }
      }
    }
    &-text {
      margin-bottom: 100px;
      margin-top: 10px;
      font-size: 32px;
      color: #fff;
    }
  }
}
@keyframes antsAnime {
  to {
    background-position: 100000%;
  }
}
</style>
