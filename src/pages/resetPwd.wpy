<!--  -->
<template>
  <view class='container resetPwd'>
    <mHeader flag="0"
             bgColor="#FAFAFA"></mHeader>
    <view class="container-scroll resetPwd-scroll"
          style="margin-top:{{height}}px">
      <text class="resetPwd-title">修改密码</text>
      <view class="resetPwd-input">
        <input value="{{form.phone}}"
               bindinput="bindInputChange('phone')"
               type="text"
               placeholder-class="placeholder"
               placeholder="请输入手机号码" />
        <view class="send-code-btn {{codeTime ? 'isSend' : ''}}"
              @tap="clickSendCode"> {{codeTime ? codeTime + 's' : '获取验证码'}}</view>
      </view>
      <view class="resetPwd-input">
        <input value="{{form.code}}"
               bindinput="bindInputChange('code')"
               type="text"
               placeholder-class="placeholder"
               placeholder="请输入验证码" />
      </view>
      <view class="resetPwd-input">
        <input value="{{form.password}}"
               bindinput="bindInputChange('password')"
               type="text"
               password='{{true}}'
               placeholder-class="placeholder"
               placeholder="请输入新密码" />
      </view>
      <view class="resetPwd-input">
        <input value="{{form.repassword}}"
               bindinput="bindInputChange('repassword')"
               type="text"
               password='{{true}}'
               placeholder-class="placeholder"
               placeholder="请确认新密码" />
      </view>
      <view class="resetPwd-submit-btn" @tap="clickReset" >确认修改</view>
      <view class="resetPwd-reset-password" @tap="clickBack" >返回首页</view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import {connect} from 'wepy-redux'
import mHeader from '@/components/header'
import {updateUserInfo} from '../store/actions/index.js'
@connect({}, {
  updateUserInfo
})
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: ''
  };
  data = {
    type: 0,
    codeTime: 0,
    form: {
      phone: '',
      code: '',
      password: '',
      repassword: ''
    }
  };
  components = {
    mHeader
  };
  methods = {
    clickBack() {
      wx.navigateBack({
        delta: 1 // 返回的页面数，如果 delta 大于现有页面数，则返回到首页,
      })
    },
    bindInputChange (name, event) {
      this.form[name] = event.detail.value
    },
    clickSendCode () {
      let {phone} = this.form
      if (this.codeTime) return
      if (!this.isPhoneVailable(phone)) {
        wx.showToast({
          title: '请输入正确的手机号', // 提示的内容,
          icon: 'none', // 图标,
          duration: 2000 // 延迟时间
        })
        return
      }
      this.codeTime = 60
      let { api } = this.$parent.globalData
      api.user.sendCode({
        phone
      }).then(() => {
        this.downTime()
      })
    },
    clickReset () {
      let { phone, password, code, repassword } = this.form
      let { isPhoneVailable } = this
      let { api } = this.$parent.globalData
      let params = {
        phone,
        password,
        smscode: code
      }
      if (!isPhoneVailable(phone)) {
        wx.showToast({
          title: '请输入正确的手机号', // 提示的内容,
          icon: 'none' // 图标,
        })
        return
      }
      if (!code) {
        wx.showToast({
          title: '请输入验证码', // 提示的内容,
          icon: 'none' // 图标,
        })
        return
      }
      if (!password) {
        wx.showToast({
          title: '请输入密码', // 提示的内容,
          icon: 'none' // 图标,
        })
        return
      }
      if (!repassword) {
        wx.showToast({
          title: '请再次确认密码', // 提示的内容,
          icon: 'none' // 图标,
        })
        return
      }
      if (password !== repassword) {
        wx.showToast({
          title: '两次密码不相同', // 提示的内容,
          icon: 'none' // 图标,
        })
        return
      }

      api.user.changePassword(params).then(({data}) => {
        wx.showToast({
          title: '密码修改成功', // 提示的内容,
          icon: 'none' // 图标,
        })
      })
    }
  };
  downTime () {
    if (this.codeTime <= 1) {
      this.codeTime = 0
    } else {
      this.codeTime -= 1
      setTimeout(() => {
        this.downTime()
        this.$apply()
      }, 1000)
    }
  }
  isPhoneVailable (phone) {
    var myreg = /^[1][0-9]{10}$/
    if (!myreg.test(phone)) {
      return false
    } else {
      return true
    }
  }
  events = {};
  watch = {};
  computed = {
    height () {
      return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight
    }
  };
  onLoad () { };
  onShow () { };
}
</script>
<style lang='scss'>
@import '../assets/style/mixin.scss';
.resetPwd {
  &-title {
    margin-top: 48px;
    margin-bottom: 64px;
    font-size: 48px;
    font-weight: 600;

  }
  &-scroll {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .send-code-btn {
    @include flex-center;
    position: absolute;
    right: 28px;
    top: 50%;
    width: 208px;
    height: 72px;
    font-size: 28px;
    font-weight: 500;
    color: rgba($color: #58422b, $alpha: 0.6);
    background: rgba(255, 255, 255, 1);
    box-shadow: 0px 4px 8px 0px rgba(127, 125, 117, 0.08);
    border-radius: 36px;
    transform: translateY(-50%);
    z-index: 1000;
    &.isSend {
      color: rgba($color: #58422b, $alpha: 0.5);
      background-color: #ededea;
    }
  }
  &-reset-password {
    margin-top: 32px;
    color: #58422b;
    font-size: 32px;
    opacity: 0.7;
  }
  &-message {
    display: flex;
    position: fixed;
    bottom: 64px;
    left: 50%;
    transform: translateX(-50%);
    &-icon {
      margin-top: 6px;
      margin-right: 12px;
      width: 24px;
      height: 24px;
      background: url('https://pub.file.k12.vip/composition/login/login-icon-lock prompt@3x.png')
        no-repeat;
      background-size: 100%;
    }
    &-text {
      width: 480px;
      color: rgba($color: #343230, $alpha: 0.3);
      font-size: 24px;
      line-height: 34px;
    }
  }
  &-submit-btn,
  &-change-btn {
    @include flex-center;
    box-sizing: border-box;
    margin-top: 12px;
    width: 558px;
    height: 100px;
    color: #58422b;
    font-size: 32px;
    font-weight: 500;
    background: linear-gradient(
      90deg,
      rgba(249, 230, 11, 1) 0%,
      rgba(253, 219, 85, 1) 100%
    );
    border-radius: 50px;
  }
  &-change-btn {
    margin-top: 128px;
    color: rgba($color: #58422b, $alpha: 0.7);
    background: #fff;
    border: 2px solid rgba(88, 66, 43, 0.3);
  }
  &-logo {
    display: flex;
    padding-top: 80px;
    margin-bottom: 64px;
    &-img {
      margin-right: 20px;
      width: 112px;
      height: 112px;
    }
    &-content {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    &-title {
      font-size: 48px;
      line-height: 66px;
      color: #58422b;
      font-weight: 600;
    }
    &-text {
      font-size: 28px;
      line-height: 40px;
      color: rgba($color: #58422b, $alpha: 0.6);
    }
  }
  &-input {
    @include flex-center;
    position: relative;
    box-sizing: border-box;
    padding-left: 48px;
    margin: 0 48px;
    margin-bottom: 32px;
    width: 558px;
    height: 96px;
    background: #f8f8f6;
    border-radius: 48px;
    input,
    &-text {
      width: 100%;
      height: 96px;
      font-size: 34px;
      color: #58422b;
    }
    &-text {
      display: flex;
      align-items: center;
    }
  }
}
.placeholder {
  width: 100%;
  font-size: 28px;
  color: rgba($color: #343230, $alpha: 0.4);
}
</style>
