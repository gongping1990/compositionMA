<template>
  <view class="result">
    <mHeader title="" bgColor="transparent" flag="3"></mHeader>
    <view
      class="container-scroll result-content"
      style="margin-top:{{height}}px"
    >
      <resultAnimation
        :status="type"
      />
      <view class="result-text" wx:if="{{resultData.score}}">获得小红花</view>
      <view class="result-flower" wx:if="{{resultData.score}}">
        <view class="result-flower-list">
          <view
            class="result-flower-item"
            wx:for="{{score}}"
            wx:key="{{index}}"
          ></view>
        </view>
      </view>
      <view class="result-footer">
        <view class="result-btn cancle" @tap="tryAgain">再看一遍</view>
        <view class="result-btn confirm" @tap="continueStudy">
          {{ resultData.hasNext ? '继续上课' : '完成学习' }}
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import mHeader from '../components/header'
import resultAnimation from '../components/resultAnimation'
export default class Result extends wepy.page {
  config = {
    navigationBarTitleText: ''
  }
  data = {
    InnerAudioContext: null,
    type: 4,
    score: 0,
    pointId: 0,
    resultData: {}
  }
  components = {
    mHeader,
    resultAnimation
  }
  methods = {
    tryAgain() {
      let { audioContext, playSound } = this.$parent.globalData
      let { type } = this.resultData
      playSound(audioContext, 1)
      wx.redirectTo({
        url: `/user/${type > 1 ? 'video' : 'picture'}?id=${
          this.pointId
        }&lookback=1`
      })
    },
    continueStudy() {
      let { audioContext, playSound } = this.$parent.globalData
      let { nextIsWork, nextType, nextPointId, hasNext } = this.resultData
      playSound(audioContext, 1)
      if (nextIsWork) {
        wx.redirectTo({
          url: `/literacy/l_submitHomework?id=${nextPointId}`
        })
      } else if (hasNext) {
        wx.redirectTo({
          url: `/user/${nextType > 1 ? 'video' : 'picture'}?id=${nextPointId}`
        })
      } else {
        wx.navigateBack()
      }
    }
  }
  events = {
    back() {
      wx.navigateBack()
    }
  }
  watch = {}
  computed = {
    height() {
      return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight
    }
  }

  getThreeLearnResult() {
    let { api } = this.$parent.globalData
    api.study
      .getThreeLearnResult({
        pointId: this.pointId
      })
      .then(({ data }) => {
        this.resultData = data.resultData
        this.InnerAudioContext.src = data.resultData.successAnswerUrl
        this.InnerAudioContext.play()
        this.$broadcast('startAnimate')
        this.$apply()
      })
  }

  // 更新结束状态
  endPoint() {
    let { api } = this.$parent.globalData
    api.study
      .endPoint({
        complete: true,
        id: this.cid
      })
      .then(({ data }) => {

        this.score = data.resultData.score
        this.getThreeLearnResult()
        this.$apply()
      })
  }
  onLoad(option) {
    this.InnerAudioContext = wx.createInnerAudioContext()
    this.InnerAudioContext.obeyMuteSwitch = false
    this.pointId = option.id
    this.cid = option.cid
  }
  onShow() {
    this.endPoint()
  }
}
</script>
<style lang="scss">
@import '../assets/style/mixin.scss';

.result {
  &-content {
    @include flex-column-center;
    padding-top: 40px;
  }
  &-icon {
    margin-bottom: 64px;
    width: 602px;
    height: 424px;
    @include bg('/1.8/result/img_cq.png');
  }
  &-text {
    font-size: 26px;
    color: #999;
  }
  &-flower {
    @include flex-center;
    align-items: flex-start;
    width: 470px;
    min-height: 160px;
    margin-top: 48px;
    &-list {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
    }
    &-item {
      margin: 0 12px;
      margin-bottom: 16px;
      width: 68px;
      height: 68px;
      @include bg('/1.8/result/bitmap.png');
    }
  }
  &-footer {
    @include flex-center;
  }
  &-btn {
    @include flex-center;
    position: relative;
    margin: 0 23px;
    margin-top: 96px;
    width: 296px;
    height: 100px;
    background: rgba(255, 255, 255, 1);
    border-radius: 50px;
    border: 2px solid rgba(255, 192, 0, 1);
    font-size: 36px;
    font-weight: 500;
    color: #ffc000;
    &::before {
      content: '';
      margin-right: 4px;
      width: 48px;
      height: 48px;
    }
    &.cancle::before {
      @include bg('/1.8/result/bt_icon_1.png');
    }
    &.confirm {
      background: #ffc000;
      color: #fff;
      &::before {
        @include bg('/1.8/result/bt_icon_2.png');
      }
    }
  }

  &-empty {
    width: 236px;
    height: 164px;
    @include bg('/1.8/result/img_kong.png');
  }
}
</style>
