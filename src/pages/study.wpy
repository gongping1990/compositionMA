<!--  -->
<template>
  <view class='container study'>
    <mHeader title=""
             bgColor="transparent"
             :showBtn.sync="showBtn"
             flag="3"></mHeader>
    <view @tap="bindClickVideo">
      <video class="video"
             id="video"
             style="height:{{isIpx ? 'calc(100vh - 68rpx' : '100vh'}}"
             show-center-play-btn="{{false}}"
             enable-progress-gesture="{{progressEnable}}"
             loop="{{false}}"
             controls="{{controls}}"
             @ended="bindended"
             @timeupdate="bindtimeupdate"
             src="{{courseInfo.videoUrl}}"></video>
    </view>
    <view class="avatar-mask"
          style="bottom:{{isIpx ? '68rpx' : '0'}}"
          wx:if="{{!controls}}">
      <view class="teacher-avatar">
        <view class="teacher-avatar-mask">
          <view class="teacher-avatar-icon"></view>
        </view>
        <image src="{{roomData.teacherImg}}"
               class="avatar teacher" />
      </view>
      <view class="student">
        <view class="avatar-student"
              wx:for="{{answerArr}}"
              wx:key="{{index}}">
          <image src="{{item.mateImg}}"
                 class="avatar" />
          <view class="medal"
                wx:if="{{item.flower}}">
            <view class="medal-icon"></view>
            x{{item.flower}}
          </view>
        </view>
      </view>
    </view>
    <van-popup show="{{ show }}"
               overlay="{{false}}"
               position="bottom">
      <view class="popup">
        <view class="popup-header">
          <view class="popup-header-left">
            <view class="popup-icon-dt"></view>
            <text>请答题</text>
          </view>
          <view class="popup-header-right">
            <view class="popup-student {{item.status == 1 && 'success'}} {{item.answer == 2 && 'error'}} {{item.status == 2 && 'fq'}}"
                  wx:for="{{answerArr}}"
                  wx:key="{{index}}">
              <image class="popup-student-avatar"
                     src="{{item.mateImg}}" />
              <view class="popup-student-status">
                {{item.answer ? (item.answer ==1 ? '正确' : item.answer ==2 ? '错误' : '已放弃') : (item.status == 2 ? '已放弃' : item.status ? '已回答' : '答题中...')}}
              </view>
              <view class="popup-student-flower">
                <flower :flower.sync="flowerOne"
                        wx:if="{{index == 0}}"></flower>
                <flower1 :flower.sync="flowerTwo"
                         wx:if="{{index == 1}}"></flower1>
                <flower2 :flower.sync="flowerThree"
                         wx:if="{{index == 2}}"></flower2>
                <flower3 :flower.sync="flowerFour"
                         wx:if="{{index == 3}}"></flower3>
              </view>
            </view>

          </view>
        </view>
        <view class="result-wrap {{showResult && 'animation'}} {{'a' + correctNum}}">
          <view class="result-header">
            <view class="result-title">恭喜以下{{correctNum}}位同学</view>
            <view class="result-header-icon"></view>
          </view>
          <view class="result-list">
            <view class="result-item"
                  wx:for="{{formatAnswerArr}}"
                  wx:key="index"
                  wx:if="{{item.answer==1}}">
              <image class="result-avatar"
                     src="{{item.mateImg}}" />
              <view class="result-icon {{'icon-' + (index + 1)}}"></view>
            </view>
          </view>
        </view>
        <view class="popup-content"
              wx:if="{{!showResult}}">
          <text class="popup-content-title">{{questionData.name}}</text>
          <view class="input-list">
            <view class="input-item {{selectIndex == item.mark && 'select'}} {{(setAnswerStatusEnd && (correctAnswer == item.mark)) && 'success'}} {{setAnswerStatusEnd && ((selectIndex == item.mark) && (correctAnswer != item.mark)) && 'error'}}"
                  wx:for="{{questionArr}}"
                  wx:key="{{item.mark}}"
                  @tap="bindClickInput({{item.mark}})">
              {{item.mark}}. {{item.problem}}
            </view>
          </view>
        </view>
        <button class="popup-btn {{answerEnd && 'disabled'}} {{answerArr[3].answer == 1 ? 'suc' : answerArr[3].answer == 2 ? 'err' : answerArr[3].answer == 3 && 'fq'}}"
                disabled="{{answerEnd}}"
                wx:if="{{!showResult}}"
                @tap="bindSubmit">
          {{answerArr[3].answer ? (answerArr[3].answer == 1 ? '回答正确' : answerArr[3].status == 2 ? '你已放弃作答' : '回答错误') : (answerEnd ? '等待老师公布答案' : '确定答案（' + time + 's)')}}
        </button>
      </view>
    </van-popup>
    <van-popup show="{{ showDialog }}">
      <view class="dialog out">
        <view class="dialog-title">课程还没有上完，</view>
        <view class="dialog-title">确定要退出吗？</view>
        <view class="dialog-btn-wrap">
          <view class="dialog-btn dialog-cancel"
                @tap="bindClickCancel">确认退出</view>
          <view class="dialog-btn dialog-confirm"
                @tap="bindClickConfirm">继续观看</view>
        </view>
      </view>
    </van-popup>
    <van-popup show="{{ showContinueDiaolig }}">
      <view class="dialog out">
        <view class="dialog-title">你上次已经学习到{{progressTimeText}}</view>
        <view class="dialog-title">是否要继续</view>
        <view class="dialog-btn-wrap">
          <view class="dialog-btn dialog-cancel"
                @tap="bindClickReset">从头再看</view>
          <view class="dialog-btn dialog-confirm"
                @tap="bindClickConfirmTwo">继续观看</view>
        </view>
      </view>
    </van-popup>
    <loading wx:if="{{loading}}"></loading>
  </view>
</template>
<script>
import wepy from 'wepy'
import mHeader from '../components/header'
import loading from '../components/loading'
import flower from '../components/flower'
import flower1 from '../components/flower1'
import flower2 from '../components/flower2'
import flower3 from '../components/flower3'
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: '',
    'usingComponents': {
      'van-popup': '../vant/popup/index'
    }
  };
  data = {
    lessonId: 0,
    videoContext: null,
    isLookBack: 0,
    show: false,
    showBtn: false,
    showDialog: false,
    showContinueDiaolig: false,
    showResult: false,
    controls: false,
    progressEnable: false,
    selectIndex: -1,
    time: 0,
    baseTime: 0,
    randomTime: 0,
    answerEnd: false,
    imitateEnd: false,
    setAnswerStatusEnd: false,
    correctAnswer: '',
    questionData: {},
    questionArr: [
      {
        content: 'A. 容光焕发',
        isRight: false
      },
      {
        content: 'B. 满面蜡黄',
        isRight: false
      }
    ],
    answerArr: [],
    currentTime: 0,
    isPlay: true,
    courseInfo: {},
    roomData: {},
    mateInfo: [],
    setTimeOut: null,
    isEnd: false,
    loading: true,
    flowerOne: 0,
    flowerTwo: 0,
    flowerThree: 0,
    flowerFour: 0
  };
  components = {
    mHeader,
    loading,
    flower,
    flower1,
    flower2,
    flower3
  };
  watch = {
    isPlay (n) {
      if (n) {
        this.videoContext.play()
      } else {
        this.videoContext.pause()
      }
    },
    baseTime (n) {
      if (n) {
        this.setRandomTime()
      }
    }
  }
  methods = {
    bindClickReset () {
      this.showContinueDiaolig = false
      this.getLessonRoom(1)
    },
    bindClickCancel () {
      this.showDialog = false
      this.showContinueDiaolig = false
      this.changeLearnStage(this.roomData.id, 1)
      wx.redirectTo({ url: '/pages/catalog' })
    },
    bindClickConfirm () {
      this.showDialog = false
      this.videoContext.play()
    },
    bindClickConfirmTwo () {
      this.reset()
      this.showContinueDiaolig = false
      this.videoContext.seek(this.roomData.progressTime)
      this.videoContext.play()
    },
    bindClickVideo () {
      this.showBtn = true
      clearTimeout(this.setTimeOut)
      this.setTimeOut = setTimeout(() => {
        this.showBtn = false
      }, 3000)
    },
    bindClickInput (i) {
      let { audioContext, playSound } = this.$parent.globalData
      if (this.answerEnd) {
        return
      }
      playSound(audioContext, 1)
      this.selectIndex = i
    },
    bindSubmit () {
      let { audioContext, playSound } = this.$parent.globalData
      playSound(audioContext, 1)
      if (this.selectIndex === -1) {
        wx.showToast({
          title: '你还没有选择答案呦！', // 提示的内容,
          icon: 'none', // 图标,
          duration: 2000
        })
        return
      }
      this.answerArr[3].status = 1
      this.answerEnd = true
      this.imitateEnd && (this.time = 1)
    },
    bindended () {
      this.isEnd = true
      if (!this.isLookBack) {
        this.changeLearnStage(this.roomData.id, 2)
        wx.redirectTo({ url: '/pages/test?id=' + this.lessonId })
      } else {
        wx.redirectTo({ url: '/pages/submitHomework?id=' + this.lessonId })
      }
    },
    bindtimeupdate (event) {
      let { currentTime } = event.detail
      if (this.currentTime !== parseInt(currentTime)) {
        let data = this.courseInfo.qaMap[this.currentTime]
        this.currentTime = parseInt(currentTime)
        if (!(this.currentTime % 10)) {
          this.changeLearnStage(this.roomData.id, 1)
        }
        if (data && data.anEnum === 1) {
          this.questionData = data
          this.questionArr = data.optionList
          this.showDialog = false
          this.show = true
          this.isPlay = false
          this.time = data.answerTime
          this.baseTime = data.answerTime
          this.setRandomTime()
          setTimeout(() => {
            this.downTime()
          }, 1000)
        }
        if (data && data.anEnum === 2) {
          this.correctAnswer = data.answer
          this.setAnswerStatus()
        }
      }
    }
  };
  events = {
    back () {
      this.videoContext.pause()
      this.showDialog = true
    }
  };
  computed = {
    formatAnswerArr () {
      let arr = this.answerArr.filter(e => {
        return e.answer === 1
      })
      return arr
    },
    correctNum () {
      let num = 0
      this.answerArr.forEach(e => {
        if (e.answer === 1) {
          num += 1
        }
      })
      return num
    },
    progressTimeText () {
      if (this.roomData.progressTime) {
        let minute = 0
        let second = 0
        let time = this.roomData.progressTime
        minute = parseInt(time / 60)
        second = time % 60
        minute = minute < 10 ? '0' + minute : minute
        second = second < 10 ? '0' + second : second
        return `${minute}分${second}秒`
      } else {
        return '00分00秒'
      }
    },
    isIpx () {
      return this.$parent.globalData.isIpx
    }
  };
  // 倒计时
  downTime () {
    if (this.time === this.randomTime) {
      this.imitateAnswer()
    }
    if (this.time > 1) {
      this.time -= 1
      setTimeout(() => {
        this.downTime()
      }, 1000)
    } else {
      this.isPlay = true
      this.answerEnd = true
      this.answerArr[3].status = this.selectIndex !== -1 ? 1 : 2
    }
    this.$apply()
  }
  // 模拟作答
  imitateAnswer () {
    let { answerArr } = this
    let random = parseInt(Math.random() * 3)
    this.answerArr[random].status = 1
    if (!(answerArr[0].status && answerArr[1].status && answerArr[2].status)) {
      setTimeout(() => {
        this.imitateAnswer()
        this.$apply()
      }, 600)
    } else {
      this.imitateEnd = true
      if (this.answerEnd) {
        this.time = 1
      }
    }
  }
  // 设置随机基数
  setRandomTime () {
    this.randomTime = parseInt(this.baseTime * (Math.random() * 0.2 + 0.6))
  }
  // 设置答题正确还是错误
  setAnswerStatus () {
    let isErr = parseInt(Math.random() * 2)
    let index = parseInt(Math.random() * 3)
    let { audioContext, playSound } = this.$parent.globalData
    for (let i = 0; i < 3; i++) {
      this.answerArr[i].answer = 1
    }
    if (isErr) {
      this.answerArr[index].answer = 2
    }
    if (this.selectIndex !== -1) {
      // eslint-disable-next-line eqeqeq
      this.answerArr[3].answer = this.selectIndex === this.correctAnswer ? 1 : 2
    } else {
      this.answerArr[3].answer = 3
    }
    this.setAnswerStatusEnd = true

    setTimeout(() => {
      playSound(audioContext, 5)
      this.showResult = true
      this.answerArr.forEach((e, i) => {
        if (e.answer === 1) {
          this.answerArr[i].flower += 1
        }
      })
      this.flowerOne = this.answerArr[0].flower
      this.flowerTwo = this.answerArr[1].flower
      this.flowerThree = this.answerArr[2].flower
      this.flowerFour = this.answerArr[3].flower

      this.changeLearnInfo(1)
      this.$apply()
      setTimeout(() => {
        this.show = false
        this.reset()
        this.$apply()
      }, 4000)
    }, 3000)
    this.$apply()
  }
  // 重制数据
  reset () {
    this.selectIndex = -1
    this.baseTime = 0
    this.time = 0
    this.randomTime = 0
    this.answerEnd = false
    this.showResult = false
    this.imitateEnd = false
    this.setAnswerStatusEnd = false
    this.time = this.baseTime
    this.answerArr = this.answerArr.map(e => {
      e.status = 0
      e.answer = 0
      return e
    })
    this.setRandomTime()
  }

  // 初始化请求
  initPage () {
    this.getClassInfo()
  }

  // 更新课程状态
  changeLearnStage (id, type) {
    if (this.isLookBack) {
      return
    }
    let { api } = this.$parent.globalData
    api.study.changeLearnStage({
      id,
      stage: type,
      progressTime: this.currentTime
    })
  }
  // 更新课程 试题等信息
  changeLearnInfo (stage) {
    if (this.isLookBack) {
      return
    }
    let { api } = this.$parent.globalData
    let mate = this.answerArr.map(e => {
      let obj = {}
      obj.correctNum = e.flower
      obj.mateId = e.mateId
      return obj
    })
    api.study.changeLearnInfo({
      id: this.roomData.id,
      mate,
      progressTime: this.currentTime,
      stage
    })
  }
  // 获取教室信息
  getLessonRoom (type) {
    let { api } = this.$parent.globalData
    let apiUrl = type ? api.study.resetLearn : api.study.getLessonRoom
    apiUrl({
      lessonId: this.lessonId
    }).then(({ data }) => {
      this.roomData = data.resultData
      this.mateInfo = data.resultData.mateInfo
      this.answerArr = this.mateInfo.map(e => {
        e.status = 0
        e.answer = 0
        e.flower = !this.isLookBack ? e.correctNum : 0
        return e
      })

      this.flowerOne = this.answerArr[0].flower
      this.flowerTwo = this.answerArr[1].flower
      this.flowerThree = this.answerArr[2].flower
      this.flowerFour = this.answerArr[3].flower
      this.reset()
      if (!this.isLookBack) {
        if (data.resultData.newstart) {
          this.changeLearnStage(data.resultData.id, 1)
          this.videoContext.play()
        } else if (data.resultData.stage > 0) {
          this.showContinueDiaolig = true
        } else {
          this.videoContext.play()
        }
      } else {
        this.controls = true
        this.videoContext.play()
      }

      this.loading = false
      this.$apply()
    })
  }

  // 获取教室试题等信息
  getClassInfo () {
    let { api } = this.$parent.globalData
    api.course.getClassInfo({
      lessonId: this.lessonId
    }).then(({ data }) => {
      this.courseInfo = data.resultData
      this.getLessonRoom()
      this.$apply()
    })
  }
  onLoad (option) {
    this.lessonId = option.id
    this.isLookBack = option.lookback
  };
  onShow () {
    this.videoContext = wx.createVideoContext('video')
    this.initPage()
  };
  onHide () {
    this.reset()
    this.changeLearnStage(this.roomData.id, 1)
  }
  onUnload () {
    this.reset()
    this.changeLearnStage(this.roomData.id, 1)
  }
  onShareAppMessage () {
    return {
      title: `每天8分钟，北师大老师教孩子积累素材、使用素材、运用技巧。`,
      path: `/pages/index`,
      imageUrl: 'https://pub.file.k12.vip/tbzw/v2/logo2.png'
    }
  }
}
</script>
<style lang='scss'>
@import '../assets/style/mixin.scss';
.study {
  height: 100vh;
  overflow: hidden;
  background-color: #000000;
  .teacher-avatar {
    position: relative;
    width: 96px;
    height: 96px;
    &-mask {
      @include flex-center();
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      border-radius: 16px;
      background-color: rgba($color: #000000, $alpha: 0.7);
    }
    &-icon {
      @include bg('/v2/audio-pay.gif');
      width: 26px;
      height: 44px;
    }
  }
  .dialog {
    @include flex-column-center;
    box-sizing: border-box;
    padding: 70px 42px;
    width: 590px;
    height: 366px;
    background: rgba(255, 255, 255, 1);
    border-radius: 32px;
    &-title {
      font-size: 36px;
      color: #58422b;
      font-weight: 500;
      line-height: 50px;
    }
    &-btn-wrap {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-top: 48px;
      width: 100%;
    }
    &-btn {
      @include flex-center;
      width: 224px;
      height: 76px;
      color: rgba($color: #58422b, $alpha: 0.5);
      font-size: 32px;
      border-radius: 40px;
      border: 2px solid rgba(88, 66, 43, 0.1);
    }
    &-confirm {
      color: #58422b;
      border-color: #fcdd48;
      background: linear-gradient(
        90deg,
        rgba(249, 230, 11, 1) 0%,
        rgba(253, 219, 85, 1) 100%
      );
      box-shadow: 0px 8px 16px 4px rgba(230, 194, 81, 0.4);
    }
  }
  .result {
    &-wrap {
      height: 0;
      visibility: hidden;
    }
    &-header {
      @include flex-column-center;
      @include bg('/sk/image1.png');
      margin: 32px 0;
      width: 100%;
      height: 234px;
      background-position-y: 100%;
      transition: all 0.5s;
      &-icon {
        @include bg('/sk/image2.png');
        width: 262px;
        height: 64px;
        opacity: 0;
        transform: scale(1.5);
        transform-origin: 50% 0%;
        transition: all 1s;
      }
    }
    &-title {
      margin-bottom: 16px;
      width: 0;
      font-size: 44px;
      font-weight: 500;
      color: #58422b;
      line-height: 60px;
      overflow: hidden;
      white-space: nowrap;
      transition: all 1s;
    }
    &-list {
      @include flex-center;
      flex-wrap: wrap;
      margin: 0 auto;
      margin-bottom: 40px;
      width: 468px;
    }
    &-icon {
      @include bg('/sk/icon-flower.png');
      position: absolute;
      bottom: -(81px / 2);
      left: 50%;
      width: 75px;
      height: 81px;
      margin-left: -(75px / 2);
      &.icon-1 {
        z-index: 1000;
      }
      &.icon-2 {
        z-index: 999;
      }
      &.icon-3 {
        z-index: 998;
      }
      &.icon-4 {
        z-index: 997;
      }
    }
    &-item {
      @include flex-center;
      position: relative;
      box-sizing: border-box;
      margin: 0 50px;
      margin-bottom: 46px;
      width: 134px;
      height: 134px;
      box-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);
      border-radius: 16px;
      border: 3px solid #39dda9;
    }
    &-avatar {
      width: 128px;
      height: 128px;
      border-radius: 16px;
    }

    &-wrap {
      &.animation {
        visibility: visible;
        height: auto;
        .result-header {
          background-position-y: 0;
        }
        .result-header-icon {
          opacity: 1;
          transform: scale(1);
        }
        .result-title {
          width: 340px;
        }
        .icon-1 {
          animation: icon-1 2s 1s backwards;
        }
        .icon-2 {
          animation: icon-2 1.4s 1.6s backwards;
        }
        &.a3 {
          .icon-3 {
            animation: icon-3 1.3s 1.7s backwards;
          }
        }
        &.a4 {
          .icon-3 {
            animation: icon-4 1.3s 1.7s backwards;
          }
          .icon-4 {
            animation: icon-5 1.2s 1.8s backwards;
          }
        }
      }

      // &.a3 {
      //   .icon-3 {
      //     bottom: 182px;
      //     left: 53%;
      //   }
      // }
      // &.a4 {
      //   .icon-3 {
      //     left: 188px;
      //   }
      //   .icon-4 {
      //     left: -47px;
      //   }
      //   .icon-3,
      //   .icon-4 {
      //     bottom: 182px;
      //   }
      // }
    }
  }
  .popup {
    width: 100vw;
    padding-bottom: 10px;
    box-shadow: 0px 8px 24px 0px rgba(236, 194, 96, 0.1);
    border-radius: 48px 48px 0px 0px;
    background: #fff;
    &-btn {
      @include flex-center;
      margin: 0 auto;
      margin-top: 32px;
      margin-bottom: 48px;
      width: 654px;
      height: 100px;
      font-size: 32px;
      color: #58422b;
      background: linear-gradient(
        90deg,
        rgba(249, 230, 11, 1) 0%,
        rgba(253, 219, 85, 1) 100%
      );
      box-shadow: 0px 8px 16px 4px rgba(230, 194, 81, 0.4);
      border-radius: 54px;
      &.disabled {
        box-shadow: none;
        background: #f2f2f2;
        color: rgba($color: #58422b, $alpha: 0.3);
      }
      &.err {
        color: #ff7c76;
      }
      &.suc {
        color: #39dda9;
      }
      &.fq {
        color: #ffd129;
      }
    }
    .input {
      &-item {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        margin-top: 32px;
        padding: 0 60px;
        width: 100%;
        min-height: 100px;
        font-size: 32px;
        color: rgba($color: #58422b, $alpha: 0.5);
        border-radius: 54px;
        border: 3px solid rgba(61, 53, 45, 0.1);
        &.select {
          color: #ffd129;
          border-color: #ffd129;
        }
        &.success {
          color: #39dda9;
          border-color: #39dda9;
          &::after {
            @include bg('/sk/icon-true.png');
            content: '';
            position: absolute;
            right: 66px;
            top: 50%;
            width: 47px;
            height: 31px;
            transform: translateY(-50%);
          }
        }
        &.error {
          color: #ff7c76;
          border-color: #ff7c76;
          &::after {
            @include bg('/sk/icon-fause.png');
            content: '';
            position: absolute;
            right: 64px;
            top: 50%;
            width: 43px;
            height: 43px;
            transform: translateY(-50%);
          }
        }
      }
    }
    &-content {
      padding: 22px 46px;
      &-title {
        font-size: 36px;
        line-height: 50px;
      }
    }
    &-student {
      @include flex-center;
      position: relative;
      box-sizing: border-box;
      width: 92px;
      height: 92px;
      border: 3px solid #ffaf29;
      border-radius: 16px;
      &-flower {
        @include flex-center;
        position: absolute;
        top: -16px;
        right: -10px;
      }
      &-avatar {
        box-sizing: border-box;
        width: 80px;
        height: 80px;
        border-radius: 16px;
      }
      &-status {
        @include flex-center;
        position: absolute;
        box-sizing: border-box;
        bottom: -12px;
        left: 50%;
        width: 108px;
        height: 40px;
        font-size: 20px;
        color: #fff;
        background: #ffaf29;
        border-radius: 32px;
        border: 4px solid rgba(255, 255, 255, 1);
        transform: translateX(-50%);
      }
      &.success {
        border-color: #39dda9;
        .popup-student-status {
          background: #39dda9;
        }
      }
      &.error {
        border-color: #ff7c76;
        .popup-student-status {
          background: #ff7c76;
        }
      }
      &.fq {
        border-color: #000000;
        opacity: 0.2;
        .popup-student-status {
          background: #000000;
        }
      }
    }
    &-icon-dt {
      @include bg('/sk/icon-question.png');
      margin-bottom: 16px;
      width: 55px;
      height: 66px;
    }
    &-header {
      @include flex-center;
      padding-top: 22px;
      padding-bottom: 24px;
      border-bottom: 2px solid rgba($color: #3d352d, $alpha: 0.1);
      &-left {
        @include flex-column-center;
        margin-right: 50px;
        font-size: 28px;
      }
      &-right {
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        padding: 0 28px;
        width: 520px;
        height: 136px;
        border-radius: 48px;
        border: 3px dashed rgba(61, 53, 45, 0.1);
      }
    }
  }
  .video {
    width: 100vw;
    height: 100vh;
  }
  .avatar-mask {
    @include flex-center;
    @include bg('/bg@3x.png');
    align-items: flex-start;
    justify-content: space-between;
    background-position-y: bottom;
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding-left: 46px;
    padding-right: 30px;
    height: 122px;
    z-index: 99;
  }
  .student {
    @include flex-center;
  }
  .avatar {
    width: 80px;
    height: 80px;
    border-radius: 16px;
    border: 4px solid #fff;
    &.teacher {
      width: 88px;
      height: 88px;
      box-shadow: 0px 88px 8px 0px rgba(0, 0, 0, 0.3);
      border-radius: 16px;
      border: 4px solid rgba(232, 197, 157, 1);
    }
    &-student {
      @include flex-center;
      position: relative;
      margin: 0 16px;
      width: 88px;
      height: 88px;
      border-radius: 16px;
      border: 4px solid #39dda9;
      box-shadow: 0px 88px 8px 0px rgba(0, 0, 0, 0.3);
      .avatar {
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        border-radius: 14px;
      }
      .medal {
        @include flex-center;
        position: absolute;
        right: -22px;
        top: -21px;
        padding: 0 10px;
        height: 36px;
        font-size: 20px;
        color: #58422b;
        background: rgba(255, 209, 41, 1);
        border-radius: 18px;
        border: 3px solid rgba(255, 255, 255, 1);
        &-icon {
          @include bg('/sk/icon-flower.png');
          margin-right: 4px;
          width: 22px;
          height: 24px;
        }
      }
    }
  }
}
@keyframes icon-1 {
  0% {
    left: 188px;
    bottom: -500px;
    transform: scale(2);
  }
  20% {
    left: 188px;
    bottom: 0;
    transform: scale(2);
  }
  30% {
    left: 188px;
    bottom: 0;
    transform: scale(1);
  }
  100% {
    left: 50%;
    bottom: -(81px / 2);
    transform: scale(1);
  }
}
@keyframes icon-2 {
  0% {
    left: -40px;
    bottom: 0;
    opacity: 0;
  }
  10% {
    left: -40px;
    bottom: 0;
    opacity: 1;
  }
  100% {
    left: 50%;
    bottom: -(81px / 2);
  }
}
@keyframes icon-3 {
  0% {
    bottom: 170px;
    opacity: 0;
  }
  10% {
    bottom: 170px;
    opacity: 1;
  }
  100% {
    bottom: -(81px / 2);
  }
}
@keyframes icon-4 {
  0% {
    left: 188px;
    bottom: 170px;
    opacity: 0;
  }
  10% {
    eft: -188px;
    bottom: 170px;
    opacity: 1;
  }
  100% {
    left: 50%;
    bottom: -(81px / 2);
  }
}
@keyframes icon-5 {
  0% {
    left: -40px;
    bottom: 170px;
    opacity: 0;
  }
  10% {
    eft: -40px;
    bottom: 170px;
    opacity: 1;
  }
  100% {
    left: 50%;
    bottom: -(81px / 2);
  }
}
</style>
