<!--  -->
<template>
  <view class='container test'>
    <mHeader title="随堂练习"
             flag="4"></mHeader>
    <view class="container-scroll"
          style="margin-top:{{height}}px">
      <view class="header">
        <view class="header-left">
          <image class="header-avatar"
                 src="{{courseInfo.teacherHeadImage}}" />
          <text class="header-title">{{courseInfo.teacherName}}</text>
          <text class="header-subtitle">写作老师</text>
        </view>
        <view class="header-right">
          <view class="student {{item.status == 1 && 'success'}}"
                wx:for="{{answerArr}}"
                wx:key="{{index}}">
            <image class="student-avatar"
                   src="{{item.mateImg}}" />
            <view class="student-status">
              {{item.status ? '已完成' : '答题中...'}}
            </view>
            <view class="student-flower"
                  wx:if="{{index == 3}}">
              <flower :flower.sync="flower"></flower>
            </view>
          </view>

        </view>
      </view>
      <view class="content"
            style="height:calc(100vh - 254rpx - {{(height + 13) * 2}}rpx)">
        <view class="question"
              wx:if="{{showQuestion}}"
              animation="{{questionAnimate}}">
          <view class="step">
            <view class="step-item {{stepIndex >= index && (item.isRight == 1 ? 'success' : (item.isRight == 2 && 'error')) }}"
                  wx:for="{{questionArr}}"
                  wx:key="{{index}}"></view>
          </view>
          <view animation="{{itemAnimate}}"
                wx:for="{{questionArr}}"
                wx:key="{{index}}"
                wx:if="{{index == stepIndex && !isSummary}}"
                class="question-content">
            <scroll-view scroll-y
                         class="question-scroll"
                         scroll-top="{{scrollTop}}">
              <view class="chart-item">
                <image class="chart-avatar"
                       src="{{courseInfo.teacherHeadImage}}" />
                <view class="chart-right">
                  <text class="chart-title">{{courseInfo.teacherName}}</text>
                  <view class="chart-content-wrap">
                    <view class="chart-content">{{item.name}}</view>
                  </view>
                </view>
              </view>
              <view class="input-list">
                <view class="input-item {{selectIndex == optionItem.mark && 'select'}} {{(setAnswerStatusEnd && (correctAnswer == optionItem.mark)) && 'success'}} {{setAnswerStatusEnd && ((selectIndex == optionItem.mark) && (correctAnswer != optionItem.mark)) && 'error'}}"
                      wx:for="{{item.optionList}}"
                      wx:key="{{index}}"
                      wx:for-item="optionItem"
                      @tap="bindClickInput({{optionItem.mark}})">
                  {{optionItem.problem}}
                </view>
              </view>
              <view class="chart-item"
                    wx:if="{{showNextBtn && (isSuccess ? item.rightAudio : item.errorAudio )}}">
                <image class="chart-avatar"
                       src="{{courseInfo.teacherHeadImage}}" />
                <view class="chart-right">
                  <text class="chart-title">{{courseInfo.teacherName}}</text>
                  <view class="chart-content-wrap">

                    <view class="chart-content voice"
                          @tap="bindClickVoice">
                      <view class="icon {{paused && 'paused'}}"></view>
                    </view>
                    <view class="chart-time">{{timeText}}</view>
                  </view>
                </view>
              </view>
            </scroll-view>

          </view>
          <scroll-view scroll-y
                       scroll-top="{{summaryScrollTop}}"
                       class="summary"
                       wx:if="{{isSummary}}">
            <view class="summary-list">
              <view class="chart-item summary-item {{summaryIndex >= index && summaryAnimateIndex >= index && 'show'}}"
                    wx:if="{{summaryIndex >= index }}"
                    wx:for="{{summaryArr}}"
                    wx:key="{{index}}">
                <image class="chart-avatar"
                       src="{{courseInfo.teacherHeadImage}}" />
                <view class="chart-right">
                  <text class="chart-title">{{courseInfo.teacherName}}</text>
                  <view class="chart-content-wrap">
                    <view class="chart-content">{{item}}</view>
                  </view>
                </view>
              </view>
            </view>

          </scroll-view>
        </view>
        <view class="chart-item"
              wx:if="{{!showQuestion}}"
              animation="{{chartAnimate}}">
          <image class="chart-avatar"
                 src="{{courseInfo.teacherHeadImage}}" />
          <view class="chart-right">
            <text class="chart-title">{{courseInfo.teacherName}}</text>
            <view class="chart-content-wrap">

              <view class="chart-content voice"
                    @tap="bindClickVoice">
                <view class="icon {{paused && 'paused'}}"></view>
              </view>
              <view class="chart-time">{{timeText}}</view>
            </view>
          </view>
        </view>
        <view class="question-btn-wrap"
              wx:if="{{showQuestion}}">
          <view class="question-btn"
                wx:if="{{!isSummary && !showNextBtn}}"
                @tap="clickStudy">确定</view>
          <view class="question-btn"
                wx:if="{{!isSummary && showNextBtn}}"
                @tap="clickNext">{{stepIndex != questionArr.length - 1 ? '下一题' : '完成答题'}}</view>
          <view class="question-btn"
                wx:if="{{setSummaryEnd}}"
                @tap="clickLinkHomeWork">去完成课后作业</view>
        </view>
      </view>
    </view>
    <van-popup show="{{ showAlert }}"
               overlay="{{false}}">
      <view class="dialog">
        <image class="dialog-icon"
               src="{{isSuccess ? 'https://pub.file.k12.vip/tbzw/v2/time/true.gif' : 'https://pub.file.k12.vip/tbzw/v2/time/fause.gif'}}" />
        <text class="dialog-text {{isSuccess ? 'success' : 'error'}}">{{isSuccess ? '回答正确' : '回答错误'}}</text>
      </view>
    </van-popup>
    <loading wx:if="{{loading}}"></loading>
  </view>
</template>
<script>
import wepy from 'wepy'
import mHeader from '@/components/header'
import loading from '@/components/loading'
import flower from '@/components/flower'
export default class Example extends wepy.page {
  config = {
    navigationBarTitleText: '',
    'usingComponents': {
      'van-popup': '../vant/popup/index'
    }
  };
  data = {
    loading: true,
    summaryScrollTop: 0,
    scrollTop: 0,
    lessonId: 0,
    summaryIndex: 0,
    summaryAnimateIndex: 0,
    stepIndex: 0,
    aduioContext: null,
    showAlert: false,
    isSuccess: false,
    isSummary: false,
    showQuestion: false,
    selectIndex: -1,
    correctAnswer: 0,
    answerEnd: false,
    readyEnd: false,
    setAnswerStatusEnd: false,
    publishEnd: false,
    currentTime: 0,
    duration: 0,
    timeText: '00:00',
    summaryArr: [],
    questionArr: [],
    answerArr: [],
    mateInfo: [],
    roomData: {},
    courseInfo: {},
    questionAnimate: null,
    chartAnimate: null,
    itemAnimate: null,
    timer: null,
    answerTime: 0,
    lookback: false,
    setSummaryEnd: false,
    flower: 0,
    paused: false,
    showNextBtn: false
  };
  components = {
    mHeader,
    loading,
    flower
  };
  methods = {
    clickLinkHomeWork () {
      wx.redirectTo({ url: '/user/submitHomework?id=' + this.lessonId })
    },
    clickStudy () {
      if (this.answerEnd) {
        return
      }
      let { audioContext, playSound } = this.$parent.globalData
      playSound(audioContext, 1)
      if (this.selectIndex === -1) {
        wx.showToast({
          title: '你还没有选择答案呦！', // 提示的内容,
          icon: 'none', // 图标,
          duration: 2000
        })
        return
      }
      this.answerEnd = true
      this.publishAnswer()
    },
    bindClickVoice () {
      if (this.paused) {
        this.paused = false
        this.audioContext.seek(0)
        this.audioContext.play()
      } else {
        this.paused = true
        this.audioContext.pause()
      }
      this.$apply()
    },
    bindClickInput (i) {
      if (this.showNextBtn) {
        return
      }
      let { audioContext, playSound } = this.$parent.globalData
      playSound(audioContext, 1)
      this.selectIndex = i
    },
    clickNext () {
      this.stop()
      if (this.stepIndex === this.questionArr.length - 1) {
        let { audioContext, playSound } = this.$parent.globalData
        playSound(audioContext, 6)
        this.changeLearnStage(3)
        this.setSummary()
        this.answerArr[3].status = 1
        this.publishEnd = true
        this.isSummary = true
        this.setSummaryIndex()
      } else {
        this.changeQuestion()
      }
      this.scrollTop = 0
      this.showNextBtn = false
    }
  };
  events = {
    back () {
      wx.navigateBack({
        delta: 1 // 返回的页面数，如果 delta 大于现有页面数，则返回到首页,
      })
    }
  };
  watch = {
    stepIndex (n) {
      if (n === this.questionArr.length - 1) {
        this.imitateReady()
      }
    }
  };
  computed = {
    height () {
      return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight
    },
    anwserTimeText () {
      if (this.answerTime) {
        let minute = 0
        let second = 0
        let time = this.answerTime
        minute = parseInt(time / 60)
        second = time % 60
        minute = minute < 10 ? '0' + minute : minute
        second = second < 10 ? '0' + second : second
        return `${minute}分${second}秒`
      } else {
        return '00分00秒'
      }
    }
  };

  play () {
    this.audioContext.play()
  }

  stop () {
    this.audioContext.stop()
  }

  alertError () {
    let { audioContext, playSound } = this.$parent.globalData
    playSound(audioContext, 2)
    this.isSuccess = false
    this.changeAlertVisible()
  }

  alertSuccess () {
    let { audioContext, playSound } = this.$parent.globalData
    playSound(audioContext, 3)
    this.isSuccess = true
    this.changeAlertVisible()
  }
  // 设置答题完成后的总结
  setSummary () {
    let numText = ['一', '二', '三', '四', '五']
    let { answerArr, questionArr } = this
    let arr = []
    let errorNum = answerArr[3].answerError
    if (errorNum) {
      arr.push(`${answerArr[3].mateName}，恭喜你完成了随堂测验。用时${this.anwserTimeText}。你做错了${errorNum}道，不要灰心，来听听下面老师的错题分析，下次会更棒哦！`)
    } else {
      arr.push(`${answerArr[3].mateName}，真棒，随堂测验你全部答对了。用时${this.anwserTimeText}。继续加油，保持优秀！`)
    }
    questionArr.forEach((e, i) => {
      if (e.isRight === 2) {
        arr.push(`第${numText[i]}题答案：${e.answer} ${e.answerStr}`)
      }
    })
    arr.push('现在，赶快点击下方按键去完成课后作业吧')
    this.summaryArr = arr
  }

  // 设置显示答题的索引
  setSummaryIndex () {
    let { summaryIndex, summaryArr } = this
    if (summaryIndex !== summaryArr.length) {
      setTimeout(() => {
        this.summaryIndex += 1
        setTimeout(() => {
          this.summaryAnimateIndex += 1
          this.$apply()
        }, 100)
        this.setSummaryIndex()
        this.$apply()
      }, 1000)
    } else {
      this.setSummaryEnd = true
    }
    setTimeout(() => {
      this.summaryScrollTop = 10000 + this.summaryIndex
      this.$apply()
    }, 500)
  }

  // 弹窗结束后切换题目
  changeAlertVisible () {
    let { isSuccess, questionArr, stepIndex } = this
    this.showAlert = true
    setTimeout(() => {
      let url = isSuccess ? questionArr[stepIndex].rightAudio : questionArr[stepIndex].errorAudio
      this.showAlert = false
      this.showNextBtn = true
      if (url) {
        this.playAudio()
      }
      this.$apply()
    }, 2000)
  }

  // 模拟其他用户完成答题
  imitateReady () {
    let { answerArr } = this
    let random = parseInt(Math.random() * 3)
    this.answerArr[random].status = 1
    if (!(answerArr[0].status && answerArr[1].status && answerArr[2].status)) {
      setTimeout(() => {
        this.imitateReady()
        this.$apply()
      }, 600)
    } else {
      this.readyEnd = true
    }
  }

  // 公布答案
  publishAnswer () {
    if (this.selectIndex === this.correctAnswer) {
      this.alertSuccess()
      this.questionArr[this.stepIndex].isRight = 1
      this.answerArr[3].flower += 1
      this.flower += 1
    } else {
      this.questionArr[this.stepIndex].isRight = 2
      this.answerArr[3].answerError += 1
      this.alertError()
    }
    this.$apply()
  }

  // 设置答题正确还是错误
  setAnswerStatus () {
    let isErr = parseInt(Math.random() * 3)
    let index = parseInt(Math.random() * 3)
    for (let i = 0; i < 3; i++) {
      this.answerArr[i].flower += 1
    }
    if (isErr) {
      this.answerArr[index].flower -= 1
    }

    this.setAnswerStatusEnd = true
    this.$apply()
  }

  randomImitateReady () {
    let base = parseInt(Math.random() * 3 + 3)
    setTimeout(() => {
      this.imitateReady()
    }, base * 1000)
  }

  changeQuestion () {
    this.app.show(this, 'itemAnimate', 0)
    setTimeout(() => {
      this.stepIndex += 1
      this.answerEnd = false
      this.selectIndex = -1
      this.correctAnswer = this.questionArr[this.stepIndex].answer
      this.app.show(this, 'itemAnimate', 1)
      this.$apply()
    }, 500)
  }

  initQuestion () {
    this.showQuestion = true
    this.correctAnswer = this.questionArr[0].answer
    this.app.show(this, 'questionAnimate', 1)
    this.timer = setInterval(() => {
      if (this.publishEnd) {
        clearInterval(this.timer)
      } else {
        this.answerTime += 1
      }
      this.$apply()
    }, 1000)
    this.$apply()
  }

  initAudio (src) {
    let { audioContext } = this
    audioContext.obeyMuteSwitch = false
    audioContext.src = src
    setTimeout(() => {
      audioContext.play()
    }, 500)
  }

  playAudio (type) {
    let { audioContext, isSuccess, questionArr, stepIndex } = this
    this.paused = false
    audioContext.src = questionArr[stepIndex][isSuccess ? 'rightAudio' : 'errorAudio']
    setTimeout(() => {
      this.scrollTop = 1000
      audioContext.play()
    }, 500)
  }

  reset () {
    this.selectIndex = -1
    this.readyEnd = false
    this.isSuccess = false
    this.answerEnd = false
    this.publishEnd = false
    this.setAnswerStatusEnd = false
    this.time = this.baseTime
    this.answerArr = this.answerArr.map(e => {
      e.status = 0
      e.answer = 0
      e.answerError = 0
      e.flower = 0
      return e
    })
    this.setRandomTime()
  }

  formatTimeText () {
    let { currentTime, duration } = this
    let minute = 0
    let second = 0
    let time = duration - currentTime
    minute = parseInt(time / 60)
    second = time % 60
    minute = minute < 10 ? '0' + minute : minute
    second = second < 10 ? '0' + second : second
    this.timeText = `${minute}:${second}`
    this.$apply()
  }

  // 获取教室信息
  getLessonRoom (type) {
    let { api } = this.$parent.globalData
    api.study.getLessonRoom({
      lessonId: this.lessonId
    }).then(({ data }) => {
      this.roomData = data.resultData
      this.mateInfo = data.resultData.mateInfo
      this.answerArr = this.mateInfo.map(e => {
        e.status = 0
        e.answer = 0
        e.answerError = 0
        e.flower = this.lookback ? 0 : e.correctNum
        return e
      })
      this.flower = this.answerArr[3].flower
      this.$apply()
    })
  }

  // 获取教室试题等信息
  getClassInfo () {
    let { api } = this.$parent.globalData
    api.course.getClassInfo({
      lessonId: this.lessonId
    }).then(({ data }) => {
      this.courseInfo = data.resultData
      this.questionArr = data.resultData.quizList.map(e => {
        e.isRight = 3
        return e
      })
      setTimeout(() => {
        this.loading = false
        if (this.lookback) {
          this.initQuestion()
        } else {
          this.initAudio(this.courseInfo.voiceUrl)
        }
        this.$apply()
      }, 1000)
      this.$apply()
    })
  }

  // 更新课程状态
  changeLearnStage (type) {
    let { api } = this.$parent.globalData
    api.study.changeLearnStage({
      id: this.roomData.id,
      stage: type
    })
  }

  onLoad (option) {
    this.lessonId = option.id
    this.lookback = option.lookback
    // eslint-disable-next-line no-undef
    this.app = this.$parent.globalData
    this.audioContext = wx.createInnerAudioContext()
    this.audioContext.onEnded(() => {
      this.paused = true
      if (this.showQuestion) return
      this.app.show(this, 'chartAnimate', 0)
      setTimeout(() => {
        this.initQuestion()
      }, 500)
      // this.showQuestion = true
      this.$apply()
    })
    this.audioContext.onTimeUpdate(() => {
      if (!this.currentTime) {
        this.duration = parseInt(this.audioContext.duration)
      }
      if (this.currentTime !== this.audioContext.currentTime) {
        this.formatTimeText()
        this.currentTime = parseInt(this.audioContext.currentTime)
      }
      this.$apply()
    })
  }
  onShow () {
    // wepy.$log.info('test info')
    this.getClassInfo()
    this.getLessonRoom()
  }
  onHide () {
    this.audioContext.stop()
    clearInterval(this.timer)
    // wepy.$log.error('test error', this.answerArr, this.roomData)
    // wepy.$log.warn('test warn', this.answerArr, this.roomData)
  }
  onUnload () {
    this.audioContext.stop()
    this.audioContext.destroy()
    clearInterval(this.timer)
  }
  onShareAppMessage () {
    return {
      title: `每天8分钟，北师大老师教孩子积累素材、使用素材、运用技巧。`,
      path: `/pages/index`,
      imageUrl: 'https://pub.file.k12.vip/tbzw/v2/logo2.png'
    }
  }
}
</script>
<style lang='scss'>
@import '../assets/style/mixin.scss';
.test {
  position: relative;
  .dialog {
    @include flex-column-center;
    box-sizing: border-box;
    padding: 40px;
    width: 320px;
    height: 320px;
    background: rgba(255, 255, 255, 0.9);
    box-shadow: 0px 0px 24px 0px rgba(165, 124, 31, 0.1);
    border-radius: 32px;
    &-icon {
      margin-bottom: 36px;
      width: 162px;
      height: 162px;
    }
    &-text {
      font-size: 36px;
      &.success {
        color: #39dda9;
      }
      &.error {
        color: #ff7c76;
      }
    }
  }
  .input {
    &-list {
      padding: 0 48px;
    }
    &-item {
      position: relative;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-sizing: border-box;
      margin-top: 48px;
      padding: 0 60px;
      width: 100%;
      height: 100px;
      font-size: 32px;
      color: rgba($color: #58422b, $alpha: 0.5);
      border-radius: 54px;
      border: 3px solid rgba(61, 53, 45, 0.1);
      &.select {
        color: #ffd129;
        border-color: #ffd129;
      }
      &.success {
        color: #39dda9;
        border-color: #39dda9;
        &::after {
          @include bg('/sk/icon-true.png');
          content: '';
          position: absolute;
          right: 66px;
          top: 50%;
          width: 47px;
          height: 31px;
          transform: translateY(-50%);
        }
      }
      &.error {
        color: #ff7c76;
        border-color: #ff7c76;
        &::after {
          @include bg('/sk/icon-fause.png');
          content: '';
          position: absolute;
          right: 64px;
          top: 50%;
          width: 43px;
          height: 43px;
          transform: translateY(-50%);
        }
      }
    }
  }
  .step {
    display: flex;
    margin-top: 48px;
    padding: 0 48px;
    &-item {
      flex: 1;
      margin-right: 48px;
      height: 6px;
      background: #f2f2f2;
      border-radius: 4px;
      &.error {
        background: #ff7c76;
      }
      &.success {
        background: #39dda9;
      }
      &:last-child {
        margin-right: 0;
      }
    }
  }
  .question {
    display: block;
    opacity: 0;
    padding-top: 1px;
    &-scroll {
      height: 51vh;
    }
    &-btn-wrap {
      position: absolute;
      bottom: 48px;
      left: 50%;
      transform: translateX(-50%);
    }
    &-btn {
      @include flex-center;
      width: 352px;
      height: 100px;
      font-size: 32px;
      background: linear-gradient(
        90deg,
        rgba(249, 230, 11, 1) 0%,
        rgba(253, 219, 85, 1) 100%
      );
      box-shadow: 0px 8px 16px 4px rgba(230, 194, 81, 0.4);
      border-radius: 54px;
    }
  }
  .chart {
    &-item {
      display: flex;
      align-items: flex-start;

      padding: 0 48px;
      margin-top: 48px;
      opacity: 1;
      transition: all 0.5s;
      &.hide {
        display: none;
        opacity: 0;
      }
    }
    &-avatar {
      margin-right: 16px;
      width: 64px;
      height: 64px;
      border-radius: 8px;
      border: 4px solid rgba(232, 197, 157, 1);
    }
    &-right {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: flex-start;
    }
    &-title {
      margin-bottom: 8px;
      font-size: 24px;
      color: rgba($color: #58422b, $alpha: 0.4);
    }
    &-time {
      width: 110px;
      margin-left: 24px;
      font-size: 28px;
      color: #58422b;
      font-weight: 500;
    }
    &-content-wrap {
      padding-left: 20px;
      display: flex;
      align-items: center;
    }
    &-content {
      position: relative;
      flex: 1;
      font-size: 28px;
      line-height: 40px;
      padding: 24px 32px;
      background: rgba(255, 245, 209, 1);
      border-radius: 16px;
      border: 3px solid rgba(232, 197, 157, 1);
      &::before {
        @include bg('/icon.png');
        content: '';
        position: absolute;
        left: -20px;
        top: 12px;
        width: 50px;
        height: 30px;
      }
      &.voice .icon {
        @include bg('/v2/audio-pay.gif');
        margin-left: 16px;
        width: 26px;
        height: 43px;
      }
      &.voice .paused {
        @include bg('/sk/icon-audio.png');
      }
    }
  }
  &-btn {
    @include flex-center;
    position: absolute;
    left: 50%;
    bottom: 48px;
    margin-left: -235px;
    width: 470px;
    height: 100px;
    color: #58422b;
    font-size: 32px;
    font-weight: 500;
    background: linear-gradient(
      90deg,
      rgba(249, 230, 11, 1) 0%,
      rgba(253, 219, 85, 1) 100%
    );
    box-shadow: 0px 8px 16px 4px rgba(230, 194, 81, 0.4);
    border-radius: 54px;
  }
  .student {
    @include flex-center;
    position: relative;
    box-sizing: border-box;
    width: 92px;
    height: 92px;
    border: 3px solid #ffaf29;
    border-radius: 16px;
    &-flower {
      position: absolute;
      top: -16px;
      right: -10px;
    }
    &-avatar {
      box-sizing: border-box;
      width: 80px;
      height: 80px;
      border-radius: 16px;
    }
    &-status {
      @include flex-center;
      position: absolute;
      box-sizing: border-box;
      bottom: -12px;
      left: 50%;
      width: 108px;
      height: 40px;
      font-size: 20px;
      color: #fff;
      background: #ffaf29;
      border-radius: 32px;
      border: 4px solid rgba(255, 255, 255, 1);
      transform: translateX(-50%);
    }
    &.success {
      border-color: #39dda9;
      .student-status {
        background: #39dda9;
      }
    }
  }
  .header {
    @include flex-center;
    @include bg('/sk/backgroud1.png');
    justify-content: space-between;
    padding: 0 32px;
    height: 254px;
    &-left {
      @include flex-column-center;
    }
    &-right {
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-sizing: border-box;
      padding: 0 28px;
      width: 520px;
      height: 136px;
      border-radius: 48px;
      background: linear-gradient(white, white) padding-box,
        repeating-linear-gradient(
          45deg,
          transparent 0,
          transparent 25%,
          rgba(61, 53, 45, 0.1) 0,
          rgba(61, 53, 45, 0.1) 50%
        );
      background-size: 20px 20px;
      border: 4px dashed transparent;
      animation: antsAnime 10000s linear infinite;
    }
    &-avatar {
      margin-bottom: 4px;
      width: 88px;
      height: 88px;
      box-shadow: 0px 0px 24px 0px rgba(175, 126, 0, 0.2);
      border-radius: 16px;
      border: 4px solid rgba(232, 197, 157, 1);
    }
    &-title {
      font-size: 28px;
      line-height: 40px;
      color: #58422b;
    }
    &-subtitle {
      font-size: 20px;
      line-height: 28px;
      color: rgba($color: #58422b, $alpha: 0.5);
    }
  }
  .content {
    position: relative;
    overflow-y: auto;
  }
  .summary {
    margin-top: 28px;
    height: 50vh;
    &-item {
      opacity: 0;
      transition: all 0.5s;
      &.show {
        opacity: 1;
      }
    }
  }
}
@keyframes antsAnime {
  to {
    background-position: 100000%;
  }
}
</style>
