<template>
  <view class="container _write">
    <mHeader title="课时目录" flag="1"></mHeader>

     <scroll-view
      class="container-scroll"

      scroll-y
      scroll-with-animation
      >

    </scroll-view>
    <view style="margin-top:{{height}}px;">
      <catalog @clickItem.user="clickItem" :height.sync="height" :lessonList.sync="lessonList">
    </view>
    <van-popup show="{{ showDialog }}" z-index="{{200}}">
      <view class="__common-dialog">
        <view class="__common-dialog-icon mt"></view>
        <view class="__common-dialog-text">
          <view>今日已解锁{{lessonList[0].nowunlock}}个课时，</view>
          <view>明天再来解锁更多课时吧！</view>

        </view>
        <view class="__common-dialog-btn" @tap="closeDialog">我知道了</view>
      </view>
    </van-popup>
    <van-popup show="{{ showDialogOne }}" z-index="{{200}}">
      <view class="__common-dialog">
        <view class="__common-dialog-icon js"></view>
        <view class="__common-dialog-text">
          <view>上交最新课程的作业即可解锁下一课</view>

        </view>
        <view class="__common-dialog-btn" @tap="closeDialog">我知道了</view>
      </view>
    </van-popup>
  </view>
</template>
<script>
import wepy from 'wepy'
import mHeader from '../components/header'
import catalog from '../components/catalog'
export default class Write extends wepy.page {
  config = {
    usingComponents: {
      'van-popup': '../vant/popup/index'
    }
  }
  data = {
    showDialog: false,
    showDialogOne: false,
    courseId: 0,
    lessonList: []
  }
  components = {
    mHeader,
    catalog
  }
  methods = {
    closeDialog() {
      this.showDialog = false
      this.showDialogOne = false
    },
    clickItem(item) {
      if(!item.unLock) {
        item.maxUnLock ? (this.showDialog = true) : (this.showDialogOne = true)
        return
      }
      wx.navigateTo({ url: `/pages/writeStudy?id=${item.lessonId}&fromUser=1` });
    }
  }
  events = {}
  watch = {}
  computed = {
    height() {
      return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight
    }
  }

  listWritingLessonCatalog() {
    let { api } = this.$parent.globalData
    if(this.lessonList.length >= this.total) return
    api.study
      .listWritingLessonCatalog({
        courseId: this.courseId
      })
      .then(({ data }) => {
        this.lessonList = data.resultData
        this.$apply()
      })
  }
  onLoad(option) {
    this.courseId = option.id
  }
  onShow() {
    this.listWritingLessonCatalog()
  }
}
</script>
<style lang="scss">
@import '../assets/style/mixin.scss';
._write {
  &-header {
    display: flex;
    justify-content: space-between;
    box-sizing: border-box;
    padding: 68px 60px;
    height: 350px;
    background: #ffc000;
    box-shadow: 0px 0px 60px 0px rgba(206, 210, 218, 1);
    border-radius: 0px 0px 60px 60px;
    &-left {
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    &-title {
      @include text-overflow;
      width: 400px;
      font-size: 60px;
      font-weight: bold;
      color: #fff;
    }
    &-progress {
      position: relative;
      width: 360px;
      height: 20px;
      background: rgba(255, 208, 64, 1);
      border-radius: 10px;
    }
    &-bar {
      position: absolute;
      left: 0;
      top: 0;
      width: 78px;
      height: 20px;
      background: rgba(255, 255, 255, 1);
      border-radius: 10px;
    }

    &-cover {
      width: 160px;
      height: 200px;
      border-radius: 20px;
    }
  }
  &-scroll {
    padding: 48px 32px;
  }
  &-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
    padding: 40px;
    margin-bottom: 32px;
    width: 686px;
    height: 180px;
    background: rgba(255, 255, 255, 1);
    box-shadow: 0px 0px 60px 0px rgba(237, 239, 243, 1);
    border-radius: 20px;
    &-flower {
      @include flex-center;
      color: #ff7a32;
      font-size: 48px;
      font-weight: bold;
      &-icon {
        @include bg('/1.8/lesson/flower.png');
        margin-right: 15px;
        width: 66px;
        height: 80px;
      }
    }
    &-content {
      flex: 1;
      margin-right: 90px;
    }
    &-title {
      margin-bottom: 12px;
      font-size: 30px;
      font-weight: 500;
      color: #333;
      .disabled & {
        color: #91a5ae;
      }
    }
    &-subtitle {
      color: #333;
      font-size: 28px;
    }
    &-btn {
      @include flex-center;
      width: 180px;
      height: 60px;
      font-size: 30px;
      color: #fff;
      font-weight: bold;
      background: linear-gradient(
        -37deg,
        rgba(67, 155, 255, 1),
        rgba(71, 132, 255, 1)
      );
      box-shadow: 0px 8px 8px 0px rgba(82, 136, 255, 0.4);
      border-radius: 30px;
      &.bk {
        background: linear-gradient(
          -37deg,
          rgba(15, 218, 130, 1),
          rgba(0, 209, 118, 1)
        );
        box-shadow: 0px 8px 8px 0px rgba(63, 211, 147, 0.4);
      }
      &.jzy {
        background: linear-gradient(
          -37deg,
          rgba(255, 192, 0, 1),
          rgba(254, 179, 18, 1)
        );
        box-shadow: 0px 5px 5px 0px rgba(255, 181, 76, 0.4);
      }
      &.hk {
        background: linear-gradient(
          -37deg,
          rgba(255, 142, 74, 1),
          rgba(255, 122, 50, 1)
        );
        box-shadow: 0px 8px 8px 0px rgba(255, 122, 50, 0.4);
      }
      &.dkk {
        background: rgba(216, 213, 226, 1);
        box-shadow: none;
      }
    }
    &-flower {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      &-icon {
        @include bg('/1.8/lesson/h.png');
        margin-right: 10px;
        width: 49px;
        height: 51px;
        &.empty {
          @include bg('/1.8/lesson/h-empty.png');
        }
      }
    }
    &-icon {
      @include bg('/1.8/lesson/right.png');
      width: 61px;
      height: 65px;
      .disabled & {
        @include bg('/1.8/lesson/suo.png');
      }
    }
  }
}
</style>
