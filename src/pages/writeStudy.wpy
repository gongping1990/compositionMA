<template>
  <view class="container write">
    <mHeader title="上课中" flag="4"></mHeader>
    <view
      class="container-scroll"
      style="margin-top:{{height}}px;height: calc(100vh - {{height}}px)"
    >
      <video
        src="{{lessonData.authVideoUrl}}"
        class="write-video"
        autoplay="{{true}}"
        loop="{{loop}}"
        @timeupdate="bindtimeupdate"
      >
        <view class="write-video-loop {{!loop && 'disabled'}}" @tap="changeLoop"></view>
      </video>
      <scroll-view
        scroll-y
        scroll-with-animation
        style="height: calc(100vh - {{height + 235}}px)"
        @scrolltolower="bindscrolltolower"
      >
        <view class="write-scroll">
          <view class="write-scroll-header">
            <view class="write-scroll-header_left">
              <view class="write-title">{{lessonData.lessonName}}</view>
            </view>
            <view class="write-catalog" @tap="changeShowCatalog">
              <view class="write-catalog-icon"></view>
              <text>目录</text>
            </view>
          </view>
          <view class="write-hanzi-wrap">
            <view class="write-hanzi-img">
              <image src="{{lessonData.etymology}}" />
            </view>
            <view class="write-hanzi-arrow"></view>
            <view class="write-hanzi-img">
              <image src="{{lessonData.evolution}}" />
            </view>
            <view class="write-hanzi-arrow"></view>
            <view class="write-hanzi" hidden="{{showCatalog}}" @tap="clickShowHanzi">
              <image src="{{lessonData.meterImg}}" />
            </view>
          </view>
          <view class="write-yd">
            <view class="write-yd-text" wx:for="{{lessonData.learncontent}}" wx:key="{{index}}">{{index + 1}}.
              {{item}}
            </view>
          </view>
          <view class="write-work" wx:if="{{workList.length}}">
            <view class="write-work-title">
              <view class="write-work-icon"></view>
              同学作业
            </view>
            <view class="write-list">
              <view class="write-item" wx:for="{{workList}}" wx:key="{{item.workId}}" @tap="clickStudentWork({{item}})">
                <view class="write-item-cover">
                  <image
                    src="{{item.homeworkList[0]}}"
                    mode="widthFix"/>
                </view>
                <view class="write-item-content">
                  <view class="write-item-title">{{item.slogan}}</view>
                  <view class="write-item-info">
                    <view class="write-item-user">
                      <image
                        class="write-item-avatar"
                        src="{{item.headimgurl}}"
                      >
                        <text class="write-item-name">{{item.nickname}}</text>
                    </view>
                    <view class="write-item-date">{{item.dateTime}}</view>
                  </view>
                </view>
              </view>
            </view>
          </view>
        </view>
      </scroll-view>
    </view>
    <view class="write-nav">
      <view class="write-btn dp" wx:if="{{lessonData.passed}}" @tap="clickComment">
        <view>查看老师点评</view>
      </view>
      <view class="write-btn" wx:if="{{lessonData.passed && lessonData.nextLessonId}}" @tap="clicNextLesson">
        <view>下一课</view>
      </view>
      <view class="write-btn" wx:if="{{!lessonData.passed}}" @tap="clickWorkBtn">
        <view>上交作业</view>
        <text>（自动解锁下节）</text>
      </view>
    </view>
    <van-popup show="{{ showDialog }}" z-index="{{200}}">
      <view class="__common-dialog">
        <view class="__common-dialog-icon mt"></view>
        <view class="__common-dialog-text">
          <view>今日已解锁{{lessonData.nowunlock}}个课时，</view>
          <view>明天再来解锁更多课时吧！</view>

        </view>
        <view class="__common-dialog-btn" @tap="closeDialog">我知道了</view>
      </view>
    </van-popup>
    <van-popup show="{{ showDialogOne }}" z-index="{{200}}">
      <view class="__common-dialog">
        <view class="__common-dialog-icon js"></view>
        <view class="__common-dialog-text">
          <view>上交最新课程的作业即可解锁下一课</view>

        </view>
        <view class="__common-dialog-btn" @tap="closeDialog">我知道了</view>
      </view>
    </van-popup>
    <van-popup show="{{showHanzi}}" @close="closeDialog">
     <view class="hanzi-popup">
       <view class="hanzi-popup-title">{{lessonData.stroke}}</view>
       <image src="{{lessonData.strokeImg}}" />
       <view class="hanzi-popup-close" @tap="closeDialog"></view>
     </view>
    </van-popup>
    <van-popup show="{{showCatalog}}" position="bottom" @close="closeDialog">
      <catalog @clickItem.user="clickItem" :lessonList.sync="calalog" wx:if="{{calalog.length}}"/>
    </van-popup>
  </view>
</template>
<script>
  import wepy from 'wepy';
  import { getDateDiff } from '../utils/getDateDiff.js';
  import catalog from '../components/catalog';
  import mHeader from '../components/header';

  export default class WriteStudy extends wepy.page {
    config = {
      usingComponents: {
        'van-popup': '../vant/popup/index',
      }
    };
    data = {
      fromUser: 0,
      showHanzi: false,
      showDialog: false,
      showDialogOne: false,
      showCatalog: false,
      loop: true,
      currentTime: 0,
      lessonId: 0,
      total: 10,
      current: 1,
      calalog: [],
      workList: [],
      lessonData: {}
    };
    components = {
      mHeader,
      catalog
    };
    methods = {
      bindtimeupdate(event) {
        let { currentTime, duration } = event.detail;
        let time = parseInt(currentTime);
        if (time != this.currentTime) {
          this.currentTime = time;
          if (time == (parseInt(duration) - 2)) {
            this.finishWritingLesson();
          }
        }
      },
      bindscrolltolower() {
        this.pageCompanionHomeWork();
      },
      clickItem(item) {
        if (item.lessonId == this.lessonId) {
          wx.showToast({
            title: '该课程正在学习', //提示的内容,
            icon: 'none' //图标,
          });
          return;
        }
        if (!item.unLock) {
          item.maxUnLock ? (this.showDialog = true) : (this.showDialogOne = true)
          return;
        }
        this.getWritingLessonInfo(item.lessonId);
      },
      clickShowHanzi() {
        this.showHanzi = true
      },
      closeDialog() {
        this.showHanzi = false
        this.showDialogOne = false;
        this.showDialog = false;
        this.showCatalog = false;
      },
      changeShowCatalog() {
        this.showCatalog = !this.showCatalog;
        this.$broadcast('scrollView');
      },
      clickStudentWork(item) {
        wx.navigateTo({
          url: `/user/completionOfWork?type=2&id=${
            item.workId
            }`
        });
      },
      clickComment() {
        wx.navigateTo({
          url: `/user/completionOfWork?type=1&id=${
            this.lessonData.lessonId
            }`
        });
      },
      clickWorkBtn() {
        wx.navigateTo({
          url: `/literacy/w_uploadImgWork?id=${this.lessonData.lessonId}`
        });
      },
      clicNextLesson() {
        if(this.lessonData.maxUnLock && !this.lessonData.nextunlock) {
          this.showDialog = true
          return
        }
        wx.showLoading({
          title: '切换课程中...', //提示的内容,
          mask: true, //显示透明蒙层，防止触摸穿透
        });
        this.getWritingLessonInfo(this.lessonData.nextLessonId);
      },
      changeLoop() {
        this.loop = !this.loop;
        this.setUpPlayback();
      }
    };
    events = {
      back() {
        if(this.fromUser) {
          wx.navigateBack({
            delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
          });
        } else {
          wx.redirectTo({ url: '/pages/lesson' });
        }
      }
    };
    watch = {};
    computed = {
      height() {
        return 46 + wepy.$instance.globalData.systemInfo.statusBarHeight;
      }
    };

    finishWritingLesson() {
      let { api } = this.$parent.globalData;
      api.study
        .finishWritingLesson({
          lessonId: this.lessonId
        });
    }

    listWritingLessonCatalog() {
      let { api } = this.$parent.globalData;
      api.study
        .listWritingLessonCatalog({
          courseId: this.lessonData.courseId
        }).then(({ data }) => {
        this.calalog = data.resultData;
        this.$apply();
      });
    }

    pageCompanionHomeWork() {
      let { api } = this.$parent.globalData;
      if (this.total <= this.workList.length) return;
      api.study.pageCompanionHomeWork({
        current: this.current,
        size: 10,
        lessonId: this.lessonId
      }).then(({ data }) => {
        this.current += 1;
        this.total = data.resultData.total;
        this.workList = data.resultData.records.map(e => {
          e.dateTime = getDateDiff(e.submitTime);
          return e;
        });
        this.$apply();
      });
    }

    setUpPlayback() {
      let { api } = this.$parent.globalData;
      api.study.setUpPlayback();
    }

    getWritingLessonInfo(lessonId) {
      let { api } = this.$parent.globalData;
      if (lessonId) {
        this.lessonId = lessonId;
      }
      api.study
        .getWritingLessonInfo({
          lessonId: lessonId || this.lessonId
        })
        .then(({ data }) => {
          this.lessonData = data.resultData;
          this.loop = data.resultData.playback;
          if (!this.calalog.length) {
            this.listWritingLessonCatalog();
          }
          this.current = 1;
          this.total = 10;
          this.pageCompanionHomeWork();
          this.showDialogOne = false;
          this.showDialog = false;
          this.showCatalog = false;
          wx.hideLoading();
          this.$apply();
        });
    }

    onLoad(option) {
      this.fromUser = option.fromUser
      this.lessonId = option.id;
    }

    onShow() {
      this.getWritingLessonInfo();
    }
  }
</script>
<style lang="scss">
  @import '../assets/style/mixin.scss';

  .write {
    .hanzi-popup {
      @include flex-column-center;
      position: relative;
      width:480px;
      height:424px;
      background:rgba(255,255,255,1);
      border-radius:40px;
      &-close {
        position: absolute;
        left: 50%;
        bottom: -103px;
        width: 50px;
        height: 50px;
        @include bg('/1.8/lesson/close-icon.png');
        transform: translateX(-50%);
      }
      &-title {
        margin-bottom: 32px;
        font-size: 36px;
        color: #000;
        font-weight: bold;
      }
      image {
        width: 220px;
        height: 220px;
      }
    }
    &-video {
      position: relative;
      width: 100vw;
      &-loop {
        @include bg('/1.8/video/loop.png');
        position: absolute;
        right: 32px;
        bottom: 40%;
        width: 92px;
        height: 40px;
        z-index: 9999;
        &.disabled {
          @include bg('/1.8/video/no-loop.png');
        }
      }
    }
    &-nav {
      @include flex-center;
      position: fixed;
      box-sizing: border-box;
      left: 0;
      bottom: 0;
      padding: 0 32px;
      width: 750px;
      height: 124px;
      background: rgba(255, 255, 255, 1);
      box-shadow: 0px 0px 8px 0px rgba(237, 239, 243, 1);
      z-index: 100;
    }
    &-btn {
      @include flex-column-center;
      flex: 1;
      box-sizing: border-box;
      height: 92px;
      background: rgba(255, 192, 1, 1);
      box-shadow: 0px 6px 8px 0px rgba(255, 192, 1, 0.4);
      border-radius: 50px;
      &.dp {
        background: #fff;
        box-shadow: 0px 6px 8px 0px rgba(255, 192, 1, 0.35);
        border: 2px solid rgba(255, 192, 1, 1);
        view {
          color: #FFC001;
        }
      }
      & + & {
        margin-left: 34px;
      }
      view {
        font-size: 32px;
        color: #fff;
        color: 600;
      }
      text {
        color: #fff;
        font-size: 24px;
      }
    }
    &-scroll {
      padding-bottom: 240px;
      &-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        box-sizing: border-box;
        padding: 10px 20px;
        &_left {
          @include flex-center;
        }
      }
    }
    &-title {
      @include text-overflow(400px);
      margin-left: 12px;
      font-size: 36px;
      color: #333;
      font-weight: bold;
    }
    &-catalog {
      @include flex-center;
      height: 92px;
      &-icon {
        @include bg('/1.8/video/list.png');
        margin-right: 8px;
        width: 48px;
        height: 48px;
      }
      text {
        font-size: 26px;
        color: #999999;
      }
    }
    &-yd {
      position: relative;
      box-sizing: border-box;
      margin: 40px 32px;
      margin-top: 88px;
      margin-bottom: 60px;
      padding: 70px 0;
      padding-left: 116px;
      width: 686px;
      border-radius: 24px;
      border: 16px solid #ffecb1;
      &-text {
        font-size: 30px;
        line-height: 38px;
        color: #666;
      }
      &::before {
        content: '';
        @include bg('/1.8/video/yd-icon.png');
        position: absolute;
        left: 50%;
        top: 0;
        width: 218px;
        height: 56px;
        transform: translate(-50%, -50%);
      }
      &::after {
        content: '';
        @include bg('/1.8/video/yd-bg.png');
        position: absolute;
        right: -90px;
        bottom: -20px;
        width: 130px;
        height: 56px;
        transform: translate(-50%, -50%);
      }
    }
    &-work {
      &-title {
        display: flex;
        align-items: center;
        margin-left: 34px;
        font-size: 34px;
        color: #333;
        font-weight: bold;
      }
      &-icon {
        display: block;
        margin-right: 10px;
        width: 40px;
        height: 40px;
        @include bg('/1.8/video/work.png');
      }
    }
    &-list {
      display: flex;
      flex-wrap: wrap;
      padding: 0 17px;
    }
    &-hanzi {
      position: relative;
      display: flex;
      justify-content: center;
      box-sizing: border-box;
      margin-right: 24px;
      height: 92px;
      width: 92px;
      &-wrap {
        display: flex;
        align-items: center;
        justify-content: center;
      }
      &-arrow {
        margin: 0 50px;
        width: 48px;
        height: 48px;
        @include bg('/1.8/work/arrow.png');
      }
      &-img {
        box-sizing: border-box;
        width:102px;
        height:102px;
        box-shadow:0px 4px 10px 0px rgba(221,221,221,0.08);
        border-radius:8px;
        overflow: hidden;
        border:2px solid rgba(255,130,130,1);
        & > image {
          width: 98px;
          height: 98px;
        }
      }
      &::after {
        content: '';
        position: absolute;
        right: -16px;
        bottom: -16px;
        width: 48px;
        height: 48px;
        @include bg('/1.8/lesson/hanzi-play.png');
      }
      image {
        height: 92px;
        width: 92px;
      }
    }
    &-item {
      box-sizing: border-box;
      margin: 0 15px;
      margin-top: 32px;
      width: 328px;
      height: 484px;
      background: rgba(255, 255, 255, 1);
      box-shadow: 0px 6px 12px 0px rgba(237, 239, 243, 0.95);
      border-radius: 16px;
      &-cover {
        width: 100%;
        height: 304px;
        overflow: hidden;
        image {
          border-radius:16px 16px 0px 0px;
          width: 100%;
        }
      }
      &-content {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        box-sizing: border-box;
        padding: 16px;
        width: 100%;
        height: 180px;
      }
      &-title {
        @include line-clamp;
        font-size: 28px;
        line-height: 36px;
        color: #333;
      }
      &-info {
        display: flex;
        align-items: center;
        justify-content: space-between;
      }
      &-user {
        @include flex-center;
      }
      &-avatar {
        margin-right: 8px;
        width: 56px;
        height: 56px;
        border-radius: 50%;
      }
      &-name,
      &-date {
        font-size: 24px;
        color: #666;
      }
      &-name {
        @include text-overflow;
        width: 100px;
      }
    }
  }
</style>
